<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  <subtitle>Think more, code less.</subtitle>
  <link href="https://samingzhong.github.io/atom.xml" rel="self"/>
  
  <link href="https://samingzhong.github.io/"/>
  <updated>2022-08-30T16:06:38.847Z</updated>
  <id>https://samingzhong.github.io/</id>
  
  <author>
    <name>SAM</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>bash-helper</title>
    <link href="https://samingzhong.github.io/2022/08/31/bash-helper/"/>
    <id>https://samingzhong.github.io/2022/08/31/bash-helper/</id>
    <published>2022-08-30T16:06:02.000Z</published>
    <updated>2022-08-30T16:06:38.847Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Bash脚本</title>
    <link href="https://samingzhong.github.io/2022/08/29/bash%E8%84%9A%E6%9C%AC/bash%E8%84%9A%E6%9C%AC/"/>
    <id>https://samingzhong.github.io/2022/08/29/bash%E8%84%9A%E6%9C%AC/bash%E8%84%9A%E6%9C%AC/</id>
    <published>2022-08-29T06:03:12.000Z</published>
    <updated>2022-08-30T16:08:32.439Z</updated>
    
    <content type="html"><![CDATA[<p>Bash脚本是个人使用较多的脚本语言，记录下常见的需求以及解决方案。</p><h3 id="Mac-OS-X-音量控制等-CSDN博客"><a href="#Mac-OS-X-音量控制等-CSDN博客" class="headerlink" title="Mac OS X: 音量控制等 - CSDN博客"></a><a href="https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjnzurHr-v5AhVK4GEKHf3pAVwQFnoECBcQAQ&url=https://blog.csdn.net/cneducation/article/details/3899819&usg=AOvVaw2XzcrRS1CIM6CQZy7QUMJw">Mac OS X: 音量控制等 - CSDN博客</a></h3><h2 id="根据关键词kill掉进程"><a href="#根据关键词kill掉进程" class="headerlink" title="根据关键词kill掉进程"></a>根据关键词kill掉进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># ~/.my_batch_sh/others/kill_app_with_keyword.sh</span></span><br><span class="line"><span class="comment"># kill app with name</span></span><br><span class="line"></span><br><span class="line">app=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">get_app_full_path_with_keyWord</span></span>()&#123;</span><br><span class="line">app=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(ps -ef|grep <span class="variable">$app</span>|grep /Application|awk <span class="string">&#x27;&#123;print $8&#125;&#x27;</span>)</span><br><span class="line"><span class="comment"># echo $(ps -ef|grep Android|grep /Application|awk &#x27;&#123;print $2&#125;&#x27;)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">kill_app_with_keyword</span></span>()&#123;</span><br><span class="line">app=<span class="variable">$1</span></span><br><span class="line">ps -ef|grep <span class="variable">$app</span>|grep /Application|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|xargs <span class="built_in">kill</span> -9</span><br><span class="line"><span class="comment"># ps -ef|grep Android|grep /Application|awk &#x27;&#123;print $2&#125;&#x27;|xargs kill -9</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;killing <span class="subst">$(get_app_full_path_with_keyWord $app)</span>...&quot;</span></span><br><span class="line">kill_app_with_keyword <span class="variable">$app</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;job done!&quot;</span></span><br></pre></td></tr></table></figure><p>然后可以这样调用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">killer=~/.my_batch_sh/others/kill_app_with_keyword.sh</span><br><span class="line">app_keywords=(Android Xcode Typora Safari Chrome Music Termin Sub)</span><br><span class="line"><span class="comment"># Termin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> app <span class="keyword">in</span> <span class="variable">$&#123;app_keywords[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="variable">$killer</span> <span class="variable">$app</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Bash脚本是个人使用较多的脚本语言，记录下常见的需求以及解决方案。&lt;/p&gt;
&lt;h3 id=&quot;Mac-OS-X-音量控制等-CSDN博客&quot;&gt;&lt;a href=&quot;#Mac-OS-X-音量控制等-CSDN博客&quot; class=&quot;headerlink&quot; title=&quot;Mac OS X</summary>
      
    
    
    
    
    <category term="Bash" scheme="https://samingzhong.github.io/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>软件开发</title>
    <link href="https://samingzhong.github.io/2022/08/29/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    <id>https://samingzhong.github.io/2022/08/29/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/</id>
    <published>2022-08-29T05:41:28.000Z</published>
    <updated>2022-08-29T06:23:36.294Z</updated>
    
    <content type="html"><![CDATA[<p>​开这么一个话题，主要是想总结下毕业这些年对于软件开发的理解，说一个我觉得还比较贴切的比喻：软件开发是产品开发流水线中的一个重要环节，了解清楚我们开发人员在流水线上的位置，并且想方设法了解熟悉所在流水线上的其他工种的工作内容和流程，对我们的帮助是巨大的。但是，作为技术人员，自己的技能必须得练精湛了，才能保证我们职业生涯有更多的可能性。</p><p>​软件工程中，一般把软件开发流程分为几个步骤：<strong>需求分析、概要设计、详细设计、编码、测试、交付、验收、维护。</strong> 一般来说，产品&#x2F;UI岗负责需求分析，概要设计、详细设计、编码则由技术开发人员完成，测试人员对产品进行测试，最后交付给客户等。可以看到，这里比较重要的参与人员就是产品&#x2F;UI、以及技术开发人员。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​		开这么一个话题，主要是想总结下毕业这些年对于软件开发的理解，说一个我觉得还比较贴切的比喻：软件开发是产品开发流水线中的一个重要环节，了解清楚我们开发人员在流水线上的位置，并且想方设法了解熟悉所在流水线上的其他工种的工作内容和流程，对我们的帮助是巨大的。但是，作为技术人</summary>
      
    
    
    
    
    <category term="软件开发" scheme="https://samingzhong.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>App变现模式与变现策略</title>
    <link href="https://samingzhong.github.io/2022/08/28/App%E8%BF%90%E8%90%A5/App%E5%8F%98%E7%8E%B0%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%8F%98%E7%8E%B0%E7%AD%96%E7%95%A5/"/>
    <id>https://samingzhong.github.io/2022/08/28/App%E8%BF%90%E8%90%A5/App%E5%8F%98%E7%8E%B0%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%8F%98%E7%8E%B0%E7%AD%96%E7%95%A5/</id>
    <published>2022-08-28T15:32:41.000Z</published>
    <updated>2022-08-29T03:34:15.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>移动应用的世界告诉你，生活中没有什么是真正免费的。 2021 年移动 App 下载量为 2300 亿次，接近 95% 为免费安装。Statista 数据显示，全行业在这一年产生了高达 4000 亿美元的收入。 毫无疑问，移动 App 成为了支撑这个世界运转的一部分，但如果将它们完全免费提供给用户，它们如何作为企业生存和发展？ 为了弄清这些问题，我们必须深入研究移动 App 是如何赚钱的。这份指南深度分析移动 App 变现现状，共有哪些收入来源，教你如何从今天开始为 App 变现并实现收入最大化。</p><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-guide-chapter-1-what-is-app-monetization-1.jpg" alt="App monetization - chapter 1: What&#39;s app monetization"></p><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="什么是-App-变现，为什么它很重要？"><a href="#什么是-App-变现，为什么它很重要？" class="headerlink" title="什么是 App 变现，为什么它很重要？"></a>什么是 App 变现，为什么它很重要？</h2><p>这通常包括多种策略，在 App 页面底部显示横幅广告、激励视频广告，或是采用整合式 App 营销，我们在后面会进行更深入地介绍。</p><p>学习并了解 App 变现至关重要，因为有许多策略可以帮助 App 开发人员和广告主创造收入。更重要的是，经过充分研究的 App 变现策略可以确保创建积极的用户体验，增强用户粘度，实现用户规模化增长。 这两个因素结合起来构成了用户生命周期价值(LTV），并形成衡量营销人员最终 KPI 的关键一环，即广告支出回报率（ROAS）。</p><h2 id="免费-App-和付费-App-有什么区别？"><a href="#免费-App-和付费-App-有什么区别？" class="headerlink" title="免费 App 和付费 App 有什么区别？"></a>免费 App 和付费 App 有什么区别？</h2><p>截止2021 年 12 月，Google Play 商店中 97% 的 App 是免费的。App Store 上 94% 的 App 是免费的。这是为什么呢？</p><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058_GCR-app-monetization-free-vs-paid.png" alt="img">数据来源：<a href="https://www.statista.com/statistics/263797/number-of-applications-for-mobile-phones/">Statista</a></p><p>免费 App 的好处在于，长远来看会为你带来更多收入，因为前期降低了尝试 App 所涉及的风险。免费 App 不需要用户的金钱投入，这反过来又使得 App 更容易以低价获得新用户。<br>虽然免费应用的标准随着行业竞争水涨船高，但与付费应用相比，人们对免费 App 期望仍然没有那么严苛。相比之下，付费 App 在很大程度上依赖于强大的品牌知名度、品牌独创的内容和颇具声望的用户口碑。愿意为 App 付费的用户自然会有更高和更直接的期待，特别是用户体验。这就对 App 变现策略施加了一定限制，对长期收入也造成了影响。</p><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-guide-chapter-2-models-strategies-1.jpg" alt="App monetization - Chapter 2: Models and strategies"></p><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><p>市面上的付费 App 也很常见。当应用市场刚打开大门时，大多数受欢迎的应用都要花钱。在商业化模式还未积累到一定数据时，要求用户预付费是 App 最首要的变现模式。数据维度增加后，开发者、广告主和营销人员开始明白，应用内购买、应用内广告和其他多样化的变现模式证明是可以实现变现。这就是为什么现在免费 App 是行业常态。自从 iOS14.5+ 通过 ATT 弹窗增强归因衡量过程中的用户隐私保护，由于广告主所获取的数据维度受限，衡量广告效果、定位投放人群以及优化营销活动变得异常困难。游戏 App 尤其受到重大打击，因为它们高度依赖 a）付费营销来刺激增长，b）用户层级数据提升广告支出回报率，为 App 找到鲸鱼用户（即占比极小但带来收入占比极高的用户）。</p><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-mobile-gaming-whales-min-1.jpg" alt="App monetization: Gaming apps whales"></p><p>尽管这些变化使移动营销比以前更加复杂，但总体上移动应用使用仍在全面增长。新冠疫情改变了我们以往的生活方式，但在这个过程中加速了行业的数字化转型。手机已经成为我们娱乐消遣以及与家庭以外的人互动的关键媒介，在市场保持增长的态势下，全球各地手机使用量成倍增加。随着疫情成为新常态，持续攀升的行业基准数据居高不下。App 变现策略也起到了推波助澜的作用。移动营销人员正在利用多种方法来建立实现 App 商业化，我们为您分析各个 App 的变现模式，为您找到最适合的变现模式。</p><h3 id="应用内购买-IAP"><a href="#应用内购买-IAP" class="headerlink" title="应用内购买 (IAP)"></a>应用内购买 (IAP)</h3><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-in-app-purchase-1.jpg" alt="App monetization models: In-app purchase"></p><p>该模式应用内购买变现模式主要是在应用内销售各种虚拟商品、服务和奖金。应用内购买收入可以分为两种：</p><ol><li><p><strong>店内收入</strong>。通过应用商店产生的应用内购买，对其进行收费（详见前方）。大部分占比是由游戏和订阅模式 App。仅在 2021 年，店内收入就创造了 1330 亿美元的消费者支出，与 2020 年同期相比增加了 20%。</p></li><li><p><strong>店外收入</strong>。 任何直接在 App 中产生的收入，包括电子商务、旅游、外卖、交通等 App。因此，它产生的收入甚至超过了店内。</p></li></ol><h4 id="应用内购买的好处"><a href="#应用内购买的好处" class="headerlink" title="应用内购买的好处"></a>应用内购买的好处</h4><p>我们正生活在一个微交易经济时代，App 通过销售应用内体验成功创造利润，包括在通讯 App 上销售表情包、在视频编辑 App 中解锁设计插件等。约会 App 也可以售卖一些功能，比如让你接触到更多的人或提升你的社交形象。IAP 很适合游戏 App而且还能够增强有趣的游戏体验。这是一种低成本的方式，但能够带来专属物品、游戏福利等等，最终推动实现更忠实的用户群体。</p><h4 id="什么样的-App-应该使用应用内购买？"><a href="#什么样的-App-应该使用应用内购买？" class="headerlink" title="什么样的 App 应该使用应用内购买？"></a>什么样的 App 应该使用应用内购买？</h4><p>应用内购买几乎适应所有类型的 App，包括从部落冲突、糖果传奇、口袋妖怪 GO 和哈利波特、奇才联盟等游戏 App，到电子商务、交通、社交和生产力等非游戏 App。</p><h4 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h4><h5 id="为客户提供高价值的升级方案"><a href="#为客户提供高价值的升级方案" class="headerlink" title="为客户提供高价值的升级方案"></a>为客户提供高价值的升级方案</h5><p>推动付费客户的最有效方式是在他们已经喜欢使用的 App 基础上提供更好的体验。应用内购买必须足够强大和吸引人，以产生长期收入。无论是提供无广告体验还是解锁优质内容，都要测试一下你的用户认为什么是最大的附加值。根据不同的地理位置以及用户群，不断优化定价，以此作为补充。实验促销活动，看看不同群体对特定的定价区间有何反应。</p><h5 id="用预测分析模型为绩效把脉"><a href="#用预测分析模型为绩效把脉" class="headerlink" title="用预测分析模型为绩效把脉"></a>用预测分析模型为绩效把脉</h5><p>利用预测分析建模来快速优化决策。机器学习算法识别你最有可能付费的用户，由此预测和防止用户流失。例如，它可以预测你最容易带来收入的用户，会在玩游戏的第一个小时内通过游戏的前五关。你可以利用这些数据来推广你的应用内购买，并相应地调整你的信息。</p><h5 id="在游戏中创建多种货币"><a href="#在游戏中创建多种货币" class="headerlink" title="在游戏中创建多种货币"></a>在游戏中创建多种货币</h5><p>创造软货币与硬货币。软货币可以通过游戏中的某些行为获得奖励，提供成长和进步的感觉。通过游戏中的困难行动可以获得有限数量的硬通货，但应该用真正的现金购买。无论是在抽奖中给予额外抽奖机会、专属皮肤，或者提升你的角色等级，这都有助于用户加快游戏进程。</p><h5 id="避免被贴上付费游戏的标签"><a href="#避免被贴上付费游戏的标签" class="headerlink" title="避免被贴上付费游戏的标签"></a>避免被贴上付费游戏的标签</h5><p>分割游戏中的购买行为，来区分游戏货币与产生实际收入的现实货币的价值。需要保证每个人都能赚取的游戏内货币的价值，保证游戏的挑战性以及对所有玩家的吸引力。如果其他玩家觉得一个游戏需要付费才能赢，这种心理不平衡可能会导致更高的流失率。</p><h3 id="订阅和免费增值模式"><a href="#订阅和免费增值模式" class="headerlink" title="订阅和免费增值模式"></a>订阅和免费增值模式</h3><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058_GCR-app-monetization-subscription-model.png" alt="img"></p><p>订阅模式依靠的是 App 免费下载，在一段时间内定期收取使用费用。通常情况下，基于订阅 App 采取 “免费 “的方式，免费提供有限功能，并要求用户付费以解锁 App 其余功能。</p><h4 id="订阅的好处"><a href="#订阅的好处" class="headerlink" title="订阅的好处"></a>订阅的好处</h4><p>如果执行得好，订阅可以成为一种有效提升收入的广告模式。按月订阅可以帮助创造可预测的现金流，特别是如果开发者对用户的流失率和留存率，或者换句话说，有多少用户正在下载或卸载 App。与预支付 App 的用户类似，用户也会积极投资使用他们支付的 App。另外，苹果应用商店将一年后订阅的佣金费用从 30% 降低到 15%。Google Play 商店从第一天起对所有订阅的用户只收取 15% 的费用。</p><h4 id="什么样的-App-应该使用订阅模式？"><a href="#什么样的-App-应该使用订阅模式？" class="headerlink" title="什么样的 App 应该使用订阅模式？"></a>什么样的 App 应该使用订阅模式？</h4><p>定期提供独特内容的应用程序可以通过订阅模式获得成功，包括视频流应用、约会应用、健身应用、新闻应用和生产力应用。</p><h4 id="最佳实践-1"><a href="#最佳实践-1" class="headerlink" title="最佳实践"></a>最佳实践</h4><h5 id="首先关注内容"><a href="#首先关注内容" class="headerlink" title="首先关注内容"></a>首先关注内容</h5><p>定期提供新鲜、独家的内容，尤其当你的 App 提供的是流媒体服务。竞争异常激烈，所以你要提供在其他 App 无法提供的独特体验，这是关键。</p><h5 id="为长期订阅用户提供折扣"><a href="#为长期订阅用户提供折扣" class="headerlink" title="为长期订阅用户提供折扣"></a>为长期订阅用户提供折扣</h5><p>为用户提供一次性支付的 6 至 12 个月的订阅费用的大笔折扣。这对你最忠诚的用户来说是一种福利，同时也为你提供了有保障的前期现金流。</p><h5 id="提供卓越的新手上路体验"><a href="#提供卓越的新手上路体验" class="headerlink" title="提供卓越的新手上路体验"></a>提供卓越的新手上路体验</h5><p>一个好的入职体验可以帮助你的用户尽早从 App 中获得最大的收益。尽可能呈现 App 最有价值的性能，鼓励用户使用最好的功能。</p><h5 id="免费试用"><a href="#免费试用" class="headerlink" title="免费试用"></a>免费试用</h5><p>无条件免费试用，能够让用户在做出购买决定之前了解价值。好的产品会轻轻松松在市场上畅销。虽然不能保证用户会转化为付费用户，但你这样做会使决定变得更加容易。即使转化率较低，你也可以通过收集数据来不断改进你的 App。</p><h3 id="应用内广告-IAA"><a href="#应用内广告-IAA" class="headerlink" title="应用内广告 (IAA)"></a>应用内广告 (IAA)</h3><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-in-app-advertising-min-1.jpg" alt="App monetization models: In-app advertising"></p><p>应用内广告简称 IAA，是一种利用 App 广告位实现变现的策略，主要应用于游戏 App 向其用户展示广告。简而言之，广告空间被出售给广告买家以展示广告。由于绝大多数用户没有完成应用内购买，在你的 App 中设置广告可以从这部分用户中提升收入（同时不向通过应用内购买实现变现的用户显示广告）。因此，这是一种非常受欢迎的收入模式，特别是在游戏中。虽然在你的 App 中显示尽可能多的广告看起来还行，但开发者需要在提供适当数量的相关广告，不因过度曝光而损害用户体验，需要把握微妙的平衡。</p><h4 id="什么样的-App-应该使用应用内广告？"><a href="#什么样的-App-应该使用应用内广告？" class="headerlink" title="什么样的 App 应该使用应用内广告？"></a>什么样的 App 应该使用应用内广告？</h4><p>应用内广告在应用世界中无处不在，几乎任何免费应用都可以有效利用。然而，它们在游戏 App 中采用更为普遍，基于非付费用户变现。App 尤其是 IAP 作为主要收入来源的 App （如电子商务、旅游和硬核游戏），应仔细考虑是否以及何时使用应用内广告，以避免在购买路径上出现任何摩擦。</p><h4 id="应用内广告格式"><a href="#应用内广告格式" class="headerlink" title="应用内广告格式"></a>应用内广告格式</h4><h5 id="横幅广告"><a href="#横幅广告" class="headerlink" title="横幅广告"></a>横幅广告</h5><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058_GCR-app-monetization-banner-ads.png" alt="img"></p><p>横幅广告由图形和文字组成，通常出现在屏幕的顶部或底部，且包含一个明确的行动呼吁按钮。</p><h5 id="视频广告"><a href="#视频广告" class="headerlink" title="视频广告"></a>视频广告</h5><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058_GCR-app-monetization-video-ads.png" alt="img"></p><p>视频广告是在另一个视频之前出现的视频片段。比如，你观看某个视频之前出现的一段预热视频。这种广告形式往往有很高的参与度和点击至激活率。</p><h5 id="激励视频广告"><a href="#激励视频广告" class="headerlink" title="激励视频广告"></a>激励视频广告</h5><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058_GCR-app-monetization-rewarded-ads.png" alt="img"></p><p>激励视频广告为用户提供了完整观看视频的应用内福利，这对游戏应用来说是一种有利可图的广告形式。奖励可以是解锁新角色、应用内货币或额外生命，因此它们几乎完全用于游戏 App。</p><h5 id="插页广告"><a href="#插页广告" class="headerlink" title="插页广告"></a>插页广告</h5><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058_GCR-app-monetization-rewarded-ad.png" alt="img"></p><p>插页广告是全屏广告，通常出现在 App 的过渡阶段，比如完成一个关卡。它们通常以丰富的媒体格式出现，可以是视频、图像或文本。</p><h5 id="原生广告"><a href="#原生广告" class="headerlink" title="原生广告"></a>原生广告</h5><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-native-ads-2.jpg" alt="App monetization: Native ads"></p><p>原生广告看起来像自然内容，如新闻提要、内容推荐，或标记为赞助内容。原生广告设计为自然地适应于 App 界面而不妨碍用户体验。</p><h5 id="可试玩广告"><a href="#可试玩广告" class="headerlink" title="可试玩广告"></a>可试玩广告</h5><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058_GCR-app-monetization-playable-ads.png" alt="img"></p><p>可试玩广告是即时可玩的小游戏，简短展示另一个游戏的关键玩法。这种广告形式很吸引人，并为游戏 App 带来的最高的 CPM 率。</p><h5 id="积分墙广告"><a href="#积分墙广告" class="headerlink" title="积分墙广告"></a>积分墙广告</h5><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-offerwall-ads-2.jpg" alt="App monetization: Offerwall ads"></p><p>积分墙为用户提供奖励，来换取特定的用户行动，如填写调查问卷、玩游戏、下载 App，或在另一个游戏中达到几级。</p><h4 id="应用内广告的好处"><a href="#应用内广告的好处" class="headerlink" title="应用内广告的好处"></a>应用内广告的好处</h4><h5 id="执行便利性"><a href="#执行便利性" class="headerlink" title="执行便利性"></a>执行便利性</h5><p>在免费 App 的世界里，应用内购买和应用内广告是收入最高的渠道。主要是由于它的可及性。并非所有 App 都可以出售应用内的升级或购买，而大多数 App 可以轻松实现视频广告、横幅广告和原生广告。</p><h5 id="在不破坏用户体验的情况下进行灵活整合"><a href="#在不破坏用户体验的情况下进行灵活整合" class="headerlink" title="在不破坏用户体验的情况下进行灵活整合"></a>在不破坏用户体验的情况下进行灵活整合</h5><p>有多种多样的 IAA 格式，可以在 App 中灵活无缝地实施。将广告整合到你的 App 的自然流程中，将使其对用户的干扰更少，对整个 App 体验也更好。特别是在休闲游戏应用中，你可以利用有奖视频广告来提供游戏中的好处，以换取观看广告。</p><h4 id="最佳实践-2"><a href="#最佳实践-2" class="headerlink" title="最佳实践"></a>最佳实践</h4><h5 id="全方位测试，尤其是频率测试"><a href="#全方位测试，尤其是频率测试" class="headerlink" title="全方位测试，尤其是频率测试"></a>全方位测试，尤其是频率测试</h5><p>像其他广告方法一样，确保你正在测试哪些格式和定价模式对你的 App 最能带来好处。始终衡量你的用户行为，不要害怕测试多个广告平台，确定哪个平台带来最高 CPM。</p><h5 id="提升广告的可看性"><a href="#提升广告的可看性" class="headerlink" title="提升广告的可看性"></a>提升广告的可看性</h5><p>保证广告生动有趣，才能保证广告持续带来收入。需要确保至少 50% 的像素，用户才可以查看移动广告。它们还必须在展示后至少连续显示一秒钟。定期测试这些要求，以便获得相应报酬。</p><h5 id="为创意投资"><a href="#为创意投资" class="headerlink" title="为创意投资"></a>为创意投资</h5><p>近年来行业对数据关注度增加，但不论过去还是现在，创意都是营销成功的重要因素之一。请聘请顶级设计师、衡量创意效果，采用多种变体测试各个要素。</p><h3 id="付费下载或按下载付费（PPD）"><a href="#付费下载或按下载付费（PPD）" class="headerlink" title="付费下载或按下载付费（PPD）"></a>付费下载或按下载付费（PPD）</h3><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-pay-per-download-min-1.jpg" alt="App monetization: Pay per download (PPD) model"></p><p>早期的变现策略是对下载 App 收取一次性费用。付费下载产生有效收入，但也会把长期收入的可能性暂时搁置。</p><h4 id="付费下载模式的好处"><a href="#付费下载模式的好处" class="headerlink" title="付费下载模式的好处"></a>付费下载模式的好处</h4><p>付费 App 很大程度上取决于品牌知名度、独创内容和用户口碑，特别是在没有免费试用的情况下。然而，一旦付费应用具有鲜明的差异化优势，就可以产生可预测的稳定收入。由于你只是在一段时间内衡量 App 下载，所以更容易衡量收入，但因此也就不能再采取其他变现策略来对你的用户进行追加销售。 此外，没有中断的横幅广告或插页广告，确保质量更高和更为清晰的用户体验。最后，付费 App 用户可能对你的 App 抱有更高期望，从你的 App 中提取更大价值，而这有助于用户留存。</p><h4 id="什么样的-App-应该按下载付费？"><a href="#什么样的-App-应该按下载付费？" class="headerlink" title="什么样的 App 应该按下载付费？"></a>什么样的 App 应该按下载付费？</h4><p>具有独特和明显差异化功能的 App 或具有独特产品、家喻户晓的品牌应该按下载付费。</p><h4 id="最佳实践-3"><a href="#最佳实践-3" class="headerlink" title="最佳实践"></a>最佳实践</h4><p>首先需要保证你的产品具有该行业的绝对差异化优势。当你为某一专门需求服务时，市场会提供一个公平的价值。同时，要知道你的 App 是否存在免费替代，以及你是否能为用户提供价值。最后，将资源用于改善应用商店优化来提高你的App 排名、信任度和知名度。</p><h3 id="混合型变现战略"><a href="#混合型变现战略" class="headerlink" title="混合型变现战略"></a>混合型变现战略</h3><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-hybrid-model-1.jpg" alt="App monetization: Hybrid model"></p><p>无需将 App 限定于一种变现策略。许多成功 App 利用混合型变现战略，即结合两种或更多的战略来最大化收入。通常情况下，使用混合模式的 App 利用应用内广告和应用内购买的组合。</p><h4 id="混合模式的好处"><a href="#混合模式的好处" class="headerlink" title="混合模式的好处"></a>混合模式的好处</h4><p>混合货币化模式非常灵活，允许开发者从可能购买的用户和不太愿意购买的用户那里产生不同的收入来源。它吸引了更多的易付费用户来收获应用内购买的好处，同时为所有其他用户提供机会，通过观看和参与广告来改善他们的应用体验。</p><h4 id="什么样的-App-应该使用混合模式？"><a href="#什么样的-App-应该使用混合模式？" class="headerlink" title="什么样的 App 应该使用混合模式？"></a>什么样的 App 应该使用混合模式？</h4><p>虽然所有 App 都可以从混合货币化模式中受益，但游戏 App 已经综合使用应用内购买和应用内广告，并取得了巨大成功。例如，用户在完成一个新关卡后可能会看到一个视频广告，同时也可以选择购买一个新的生命。</p><h4 id="最佳实践-4"><a href="#最佳实践-4" class="headerlink" title="最佳实践"></a>最佳实践</h4><p>使用混合货币化策略的 App 需要格外警惕显示太多的广告。优先考虑用户体验是特别关键的，确保你的 App 值得花钱购买。节制弹出式广告的数量、广告曝光，甚至你的应用内购买的定价也是不可或缺的。再往前走一步，对你的用户进行适当的细分。鼓励你的 “鲸鱼用户”进行更有价值的购买。你也可以考虑向不太愿意消费的玩家展示更多的应用内广告或激励视频广告。</p><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-guide-chapter-3-app-store-fees-1.jpg" alt="App monetization - chapter 3: App store platform fees"></p><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><h2 id="应用商店平台费用"><a href="#应用商店平台费用" class="headerlink" title="应用商店平台费用"></a>应用商店平台费用</h2><p>只需要点击几下，让你的 App 在应用商店上架。上架很容易，但让你的 App 脱颖而出却很难。竞争日趋激烈的当下，需重点确保你的 App 在多个市场上架并优化。另外，你必须为在每个商店上架的 App 支付一定费用。以下是所有费用的概要。</p><p><strong>苹果应用商店：</strong>每一个付费应用下载和应用内购买的数字商品和服务都有 30% 的佣金。每年在 App Store 的销售额低于 100 万美元的开发者可能有资格参加苹果的 App Store 小型企业计划，该计划收取 15% 的佣金。对实物产品不收取任何费用。一年后，订阅佣金降至 15%。</p><p><strong>Google Play 商店：</strong>每一次付费应用下载和应用内购买数字商品和服务的 15% 费用，销售额不超过 100 万美元。一旦达到门槛，该比率将提高到 30%。</p><p><strong>Galaxy 应用商店：</strong>在应用商店购买的产品有 30% 的佣金（可协商）。</p><p><strong>亚马逊应用商店：</strong>每一次付费应用下载和数字商品和服务的应用内购买都有 30% 的佣金。 视频应用有 20% 的佣金。每年在应用商店产生的收入低于 100 万美元的开发者可以获得 20% 的佣金率和 10% 的亚马逊网络服务的促销积分。</p><p><strong>微软商店：</strong>每一个付费应用的下载和数字商品和服务的应用内购买都有 15% 的佣金。12％ 的 PC 游戏的佣金。在 Xbox 游戏机上的所有 App、游戏和应用内购买的 30% 佣金。非博彩类 App 也可以利用自己的支付系统来避免佣金。</p><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-chapter-4-key-metrics-1.jpg" alt="App monetization - chapter 4: Key metrics"></p><h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><h2 id="衡量你的-App-变现模式有效关键指标"><a href="#衡量你的-App-变现模式有效关键指标" class="headerlink" title="衡量你的 App 变现模式有效关键指标"></a>衡量你的 App 变现模式有效关键指标</h2><p>现在你已经了解了所有 App 变现模式的异同，我们来看看该如何衡量你所选择的变现模式的效果。请仔细阅读以下衡量标准。留存率。在一定时期内使用你的 App 的用户百分比。虽然独立的用户行为有细微差别，但留存率是一个很好的高级指标，可以确定你的 App 是否提供了有价值的用户体验，从而转化为忠诚度。在执行应用内广告策略时，它还可以帮助识别是否影响用户行为。留住用户是关键，留存是变现的基础。 你的用户越是忠诚，他们参与的广告越多，进行应用内购买的可能性就越大。<strong>App 粘度</strong>: 用户在持续且定期打开使用 App 的程度。用户参与度越高， App 粘性就越大。公式：将日活跃用户(DAU)除以月活跃用户(MAU)并乘以 100。</p><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058-GCR-Active-users-dau-mau-ratio.png" alt="img"></p><p><strong>ARPU（每用户平均收入）</strong>: 衡量你从每个用户那里平均赚取多少钱。计算方法：将企业的总收入除以同一时期内的平均用户数。生命周期价值（LTV）： 确定一个用户在使用 App 的时间跨度中价值如何。这些信息有助于营销人员确保可以在广告方面充分投入资金来获取客户，同时保持盈利。<strong>漏斗转化率：</strong>帮助确定用户在营销漏斗中的质量–从他们看到广告，激活 App，到完成有意义、能产生收入的 应用内事件。这些数据允许 App 通过确定用户在广告&#x2F;购买过程中的落差来优化变现战略。</p><p><img src="https://massets.appsflyer.com/wp-content/uploads/sites/10/2022/04/8058_GCR-app-monetization-funnel-conversion-rates.png" alt="img"></p><p>一旦你了解了这些关键指标，你就可以更有效地测试你认为最适合你的 App 的多种变现模式。最终，你需要衡量每个广告体验对你的业务基准线有何影响。</p><p><img src="https://www.appsflyer.com/wp-content/uploads/2022/03/8058_app-monetization-guide-key-takeaways-1.jpg" alt="App monetization - Key takeways"></p><h2 id="关键结论"><a href="#关键结论" class="headerlink" title="关键结论"></a>关键结论</h2><ul><li>虽然 95% 的 App 是免费安装的，但整个行业在这一年中从各种变现来源获得了高达 4000 亿美元的收入。</li><li>有 5 种应用变现模式：应用内广告、应用内购买、付费应用、订阅和混合模式</li><li>创建一个对用户友好的 App 变现战略来确保留存并增长你的用户群体，并从中获利。</li><li>应用内广告和应用内购买是迄今为止最常见的移动 App 变现模式</li><li>为了更好了解使用何种广告模式，首先要区分你上架的是付费还是免费 App。测试多个模型，同时计算留存、ARPU 等关键绩效指标，从而有效衡量每个模型的表现。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;移动应用的世界告诉你，生活中没有什么是真正免费的。 2021 年移动 App 下载量为 2300 亿次，接近 95% 为免费安装。Stati</summary>
      
    
    
    
    
    <category term="App变现" scheme="https://samingzhong.github.io/tags/App%E5%8F%98%E7%8E%B0/"/>
    
    <category term="AppFlyer" scheme="https://samingzhong.github.io/tags/AppFlyer/"/>
    
    <category term="最佳实践" scheme="https://samingzhong.github.io/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="App运营" scheme="https://samingzhong.github.io/tags/App%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>关键结论</title>
    <link href="https://samingzhong.github.io/2022/08/28/App%E8%BF%90%E8%90%A5/%E5%85%B3%E9%94%AE%E7%BB%93%E8%AE%BA/"/>
    <id>https://samingzhong.github.io/2022/08/28/App%E8%BF%90%E8%90%A5/%E5%85%B3%E9%94%AE%E7%BB%93%E8%AE%BA/</id>
    <published>2022-08-28T13:51:46.000Z</published>
    <updated>2022-08-29T01:54:29.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户变现-amp-变现策略"><a href="#用户变现-amp-变现策略" class="headerlink" title="用户变现&amp;变现策略"></a>用户变现&amp;变现策略</h2><ul><li>虽然 95% 的 App 是免费安装的，但整个行业在这一年中从各种变现来源获得了高达 4000 亿美元的收入。</li><li>有 5 种应用变现模式：应用内广告、应用内购买、付费应用、订阅和混合模式</li><li>创建一个对用户友好的 App 变现战略来确保留存并增长你的用户群体，并从中获利。</li><li>应用内广告和应用内购买是迄今为止最常见的移动 App 变现模式</li><li>为了更好了解使用何种广告模式，首先要区分你上架的是付费还是免费 App。测试多个模型，同时计算留存、ARPU 等关键绩效指标，从而有效衡量每个模型的表现。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;用户变现-amp-变现策略&quot;&gt;&lt;a href=&quot;#用户变现-amp-变现策略&quot; class=&quot;headerlink&quot; title=&quot;用户变现&amp;amp;变现策略&quot;&gt;&lt;/a&gt;用户变现&amp;amp;变现策略&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;虽然 95% 的 App 是免费安装的，</summary>
      
    
    
    
    
    <category term="最佳实践" scheme="https://samingzhong.github.io/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="App运营" scheme="https://samingzhong.github.io/tags/App%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>四大产品生命周期丨运营如何明确不同阶段的目标和效果</title>
    <link href="https://samingzhong.github.io/2022/08/28/product/product-life/"/>
    <id>https://samingzhong.github.io/2022/08/28/product/product-life/</id>
    <published>2022-08-28T13:36:22.000Z</published>
    <updated>2022-08-29T01:54:29.544Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://s1.gupowang.com/2016/03/201603231458702302146592.jpg!890x300.2" alt="img"></p><p>百度百科对“产品生命周期”是这么定义的：</p><p>产品生命周期（Product Life Cycle），简称PLC，是产品的市场寿命，即一种新产品从开始进入市场到被市场淘汰的整个过程。</p><p>具体来讲：这个过程其实就是经历了一个从“开发、引进、成长、成熟一直到衰退”的阶段。</p><p>对于企业来说，就是要想办法提高开发和引进阶段的效率，加速成长的步伐，延长成熟以及成熟的周期，减缓衰退的进程。</p><p><strong>互联网产品的生命周期</strong></p><p>对于互联网产品来说，生命周期的理论是一样的逻辑。</p><p>为了稍稍区别于一般产品生命周期包含的“引进”“成长”“成熟”“衰退”四个阶段，我这里把互联网产品的生命周期分为以下四个阶段，如图所示：</p><p><img src="http://s1.gupowang.com/2016/03/201603231458702563516327.jpg" alt="2.webp.jpg"></p><p><strong>1、启动阶段</strong></p><p>对于互联网产品来说，启动阶段就相当于一个企业的初创阶段。</p><p>在这个阶段，产品需要迅速从理论变成实际，从用户痛点需求和商业目标出发，迅速将产品上线并测试，然后寻求种子用户进行快速验证。</p><p>在这个阶段，用户对产品还不了解，产品也是处于探索当中，市场前景并不明朗，因此我们一般考虑的是“我们的产品是否能够解决用户的痛点”以及“我们产品的用户体验到底如何”等问题。</p><p><strong>2、成长阶段</strong></p><p>在成长阶段，产品已经渡过了种子用户期，并且也获得了种子用户的认可，那么这时候就需要通过营销手段迅速提升产品的流量（销量）和品牌知名度！</p><p>在这个阶段，用户逐渐熟悉产品，产品得到验证，市场前景也比较明朗。</p><p>那么我们一般考虑的是“我们应该如何运营产品才能快速提升流量和品牌知名度”以及“我们在获取流量之后应该如何转化或者如何变现”等问题。</p><p><strong>3、成熟阶段</strong></p><p>在成熟阶段，产品已经趋于稳定，很难再有突破性的增长，那么这时候主要就是做好用户的工作，通过运营手段活跃并留存老用户，同时保持新用户的稳定增长！</p><p>在这个阶段，市场趋向饱和，用户趋于稳定，我们一般考虑的是“我们应该如何活跃我们的老用户和尽最大能力保持新用户的稳定增长”以及“如何稳定的将用户变现从而实现盈利”等问题。</p><p><strong>4、衰落阶段</strong></p><p>在衰落阶段，产品正在走下坡路，已经逐渐失去了竞争力，产品的销量和利润持续下降，不能适应市场的需求；更好的竞品也已经出现，自身的用户流失率也在不断提升。</p><p>那么这时候首先就是要通过运营手段做好用户回流工作，并且积极创新和寻求转型的新机会。</p><p>我们一般考虑的是“我们应该如何触达那些流失的用户并将他们拉回来”以及“我们有没有机会创新或者项目能不能转型”等问题。</p><p><strong>不同阶段的产品策略</strong></p><p>那么，对于企业来说，在知道自己产品所处的生命周期阶段之后，到底应该怎么做，才能更加有效地制定出合理的产品迭代和运营策略呢？</p><p>古话说得好：目的决定一切！我们围绕产品生命周期所采取的一切有利于产品的行动都是围绕产品的目标而开展的。</p><p>产品生命周期的每个阶段都是有其目标的，我们要想制定出针对各个阶段最有效的策略，那么就要清晰认识到这个阶段的目的或者目标是什么。只有从目的出发，我们才能知道我们要做什么！</p><p><strong>1、启动阶段</strong></p><p>对于这个阶段的产品来说，最主要的目标就是：找到用户痛点，做好功能分析，迅速上线验证，种子用户认可。</p><p>如果要实现这个目标，那么我们可以采取这样的方法或者步骤：</p><p>①通过市场调研的方法找到用户痛点；</p><p>②根据用户需求，做好需求分析；同时建立自媒体通道，为种子用户和后期运营打基础；</p><p>③迅速完成原型，做好设计，快速开发，做好产品测试，保证用户体验；</p><p>④获取种子用户，跟踪并做好意见反馈，做好数据分析，不断改进和提升产品体验，以获得种子用户的认可。</p><p><strong>2、成长阶段</strong></p><p>对于这个阶段的产品来说，最主要的目标就是：获得用户，转化变现，建立品牌，名声远播。</p><p>如果要实现这个目标，那么我们可以采取这样的方法或者步骤：</p><p>①利用前期积累的种子用户迅速推广，扩大影响力；</p><p>②加强运营团队建设。主要围绕运营展开工作，一方面做好拉新，促活和留存工作；另一方面搞好品牌建设；</p><p>③继续建设好官方自媒体通道，同时与外界媒体保持联系并搞好关系；</p><p>④做好数据分析。用户方面要重点关注用户留存率，DAU（日活跃用户数量），MAU（月活跃用户数量），以及付费用户数据和ARPU（每用户平均收入）等数据；推广方面要重点关注推广渠道数据，根据数据优化渠道组合；品牌方面要重点关注百度指数等等数据；产品方面要重点关注页面访问数据，跳转数据，访问时长，用户使用路径等等方面；关于数据方面要关注的指标，这里有一个表格可以提供参考：</p><p><img src="http://s1.gupowang.com/2016/03/201603231458702651193983.jpg" alt="3.webp.jpg"></p><p>⑤产品方面，要围绕数据和用户做好功能更新和产品迭代；</p><p>⑥采取各种激励手段将流量转化为用户，将用户转化为付费用户，在这里需要精准的选择好付费用户对象，有时候并不一定所有的用户都是产品的付费转化目标。</p><p><strong>3、成熟阶段</strong></p><p>对于这个阶段的产品来说，最主要的目标就是：活跃并维系好老用户，同时保持新用户增长，继续稳定地实现创收盈利。</p><p>如果要实现这个目标，那么我们可以采取这样的方法或者步骤：</p><p>①活跃并维系好老用户，主要利用运营手段，采取激励体制激活他们；</p><p>②继续数据分析以及产品迭代工作；</p><p>③继续做好用户转化变现工作，进一步提高营收能力。</p><p><strong>4、稳定阶段</strong></p><p>对于这个阶段的产品来说，最主要的目标就是：尽力做好用户回流工作，同时更新产品线，寻求创新和转型，以求解决用户新的痛点，从而继续占领市场。</p><p>如果要实现这个目标，那么我们可以采取这样的方法或者步骤：</p><p>①想办法了解和触达流失用户，然后通过运营将他们最大程度的回流；关于用户流失数据的分析，这里有一个表格可以提供参考：</p><p><img src="http://s1.gupowang.com/2016/03/201603231458703525982421.jpg" alt="640.webp.jpg"></p><p>②继续做好其他方面运营工作，数据分析方面重点关注回流率；</p><p>③关注竞品的动态，做好竞品分析，借鉴竞品模式，提升产品竞争力，以求从竞品手中抢夺用户，或者不被抢走用户；</p><p>④进行市场调研（包括竞品分析），寻求新的项目机会，或者更新产品线，想办法满足用户日益增长的新需求的目的。</p><p><strong>结语</strong></p><p>每个阶段都有对应的目标，并且这些目标最终都应当服务于产品生命周期的整体目标，这个整体目标就是：延长产品最大盈利的周期，提升产品的寿命，减缓衰退进程。</p><p>我们应该明确产品生命周期所处的阶段，并且利用产品的生命周期去有效的指导我们去开展产品方面的工作，以求最大程度地实现产品的商业目标和用户目标！</p><p>版权声明:本文来源于互联网,仅作分享学习之用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;http://s1.gupowang.com/2016/03/201603231458702302146592.jpg!890x300.2&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;百度百科对“产品生命周期”是这么定义的：&lt;/p&gt;
&lt;p&gt;产品生命周期（Pro</summary>
      
    
    
    
    
    <category term="产品生命周期" scheme="https://samingzhong.github.io/tags/%E4%BA%A7%E5%93%81%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>9月</title>
    <link href="https://samingzhong.github.io/2022/08/28/life/life-month-9/"/>
    <id>https://samingzhong.github.io/2022/08/28/life/life-month-9/</id>
    <published>2022-08-28T08:00:43.000Z</published>
    <updated>2022-08-29T08:03:55.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>给小朋友在家附近报名了钢琴，自己学了一阵子琴，然后只能弹一个4536251的和弦，一首生日快乐、婚礼进行曲，就这样止步不前了，惭愧。</p><p>那就钢琴希望她能学有所成吧～</p><p>分享一段关于小朋友的视频</p><p><video height="400" src="https://samingzhong.github.io/images/2022/video828.mp4" controls>   你的浏览器不支持 <code>video</code> 标签。 </video></p><h2 id="科技行业"><a href="#科技行业" class="headerlink" title="科技行业"></a>科技行业</h2><p>9月份是个科技行业热闹的月份。个人比较关注的有几个：苹果即将发布新款iPhone、小鹏G9上市。无论哪个，都是凑凑热闹，不会考虑掏钱买，（也没钱买😂）。</p><p><img src="/images/2022/iphone14.jpeg"></p><ul><li><p>新款iPhone。</p><p>不出意外，硬件也不会有啥亮点，屏幕升级：感叹号屏幕，刷新率可能会上去。</p><ul><li>由于Face ID，前面的红外镜头、摄像头、距离感应器等需要占用空间。感叹号屏幕，是现阶段的最优解了吧。</li><li>屏幕刷新率。迫于Android设备都到240HZ了，是得跟一跟了。</li><li>其他。新配色肯定会有的，已经成习俗了。真的也不好意思拿出来说吧，但是又很实在，消费者有需要（不然怎么知道我用的是新款？！Damn it！该死的虚荣心！但我是没这需求的）。</li></ul><hr></li></ul><p><img src="/images/2022/G9.jpeg" alt="G9"></p><ul><li>小鹏G9。这是奶爸车定位，类似理想One。目测售价30-50w，好贵，我不配关注它😂。</li></ul><h2 id="裁员潮"><a href="#裁员潮" class="headerlink" title="裁员潮"></a>裁员潮</h2><p>最近新闻、B站、公众号等挺多人说自己被裁员了，然后挺长一段时间都没找到合适的工作，也有点感慨，自己5月底离职，然后六月份顺利入职新公司，回想下，也算挺幸运的了吧，现在咱们这一代年轻人，背负的东西太多，尤其是85-95这一阶段的年轻人，养家糊口，买房买车，真的太难了。主要还是房子占我们收入比重太高了，如果普通家庭5年-10年左右的继续就可以买下一套房子，那么局面就不会是今天这样。但是，这个事情跟经济发展挂钩严重，所以，都是身不由己。特别是现在最近这几年中美关系变差、全球疫情、乌俄战争等，内外环境都不太友好，作为普通人，我觉得我们需要做的就是：</p><ul><li><p><strong>降级消费，尽快结清负债并攒下一定的现金</strong></p><ul><li><p>尽快还清负债。</p><p>35岁以后，如果还是给企业打工，这个风险较高，因为企业一般情况下都会优先淘汰高龄高薪员工，那么意味着随时可能失业，月供怎么解决？所以，提前把债务清掉，这就是眼下的标准答案了吧。</p></li><li><p>降级消费。</p><p>最近十几二十年，消费崛起太明显了，整个社会的风气也是，被商家带着走，处处都是设法让你消费的广告，房子、车子、手机等数码产品，衣食住行等，太多所谓的消费陷阱，看清了这些套路，我们只需要做到：保证刚需，其他的尽可能拒绝消费，把现金省下来。（还有种胡扯的说法：钱是省不下来的，而是挣下来的。这也是想让你不停的掏钱消费的套路，别被带偏了。）</p></li><li><p>积攒足够的现金。</p><p>充裕的现金，目的就是保证发生意外或者外部不确定因素的情况下，我们的正常生活不受严重影响。比如说重大疾病、经济下滑、通货膨胀甚至战争这种，充裕的现金至少能保证，三五年内，不至于被饿死。</p></li></ul><p><strong>简单总结下就是：尽量别太花钱，多攒钱。</strong></p></li><li><p><strong>30岁-35岁，摸清所在行业运行规律，打磨好技术，并做技术变现；另外就是寻找跨行业的就业可能。</strong></p><ul><li><p>互联网行业做技术，目前环境来说，做一辈子是不可能的。所以尽早摸清所在行业运行规律，想办法做好技术变现。通俗来讲就是，了解清楚并尽可能hold的住一个互联网产品开发运营的整个生命周期，自己尝试做一个产品，并顺利运营它，哪怕不挣钱，这也是一种经验尝试。拥有了这种技能和经验，后面如果有好的机会、风口，你能快速造出产品，并且运营起来，没准，干个一年半载，比你给企业打10年工挣得还要多，闷声发财，说的就是这个。所以，行业上，很多独立开发者，挣了钱都是不敢说的，怕的就是竞争对手入场，财路就断了，基本没人这么傻，自断饭碗。那么，说回重点：就目前来说，互联网产品开发和运营的生命周期，我还缺啥？</p><p>先捋清互联网产品开发运营的几个重点环节：</p><ul><li>0、产品选型</li><li>1、产品设计</li><li>2、产品开发</li><li>3、产品运营</li></ul><p>一般开发者就是在第二个流水线。没错，我们跟工厂里的工人没本质区别，都是技能、工种单一，一般情况无法熟悉和掌握整个流水线的各种技能，这也是我们产生焦虑的根本原因：我们很容易被替代，年纪一大，随时被企业扔掉。</p><p>根据第一性原理：直指目标，缺啥补啥。那产品开发这块，我们就得掌握从0-1全流程的制作流程，确保自己能从头到尾把产品做出来。</p><p>然后就只剩下0、1、3三个工序技能需要掌握，但这里说的掌握，应该不需要所谓的精通，熟悉掌握即可。</p><ul><li>产品选型。得调研清楚，整个市场哪方面的产品机会比较大，这里说的机会是：你能为用户带来什么，能帮助用户解决什么痛点。微信解决了人与人的即时消息、状况联通需求；抖音、微博满足了用户的猎奇、消磨碎片时间的需求。购物App、游戏等同理。</li><li>产品设计。主要是功能、交互UI设计。快、准、好看好用。</li><li>产品运营。积累用户、分析用户更潜在需求，设计让用户掏钱的功能，设法保证产品可持续、能增长。也就保证了财路。</li></ul><p>接下来，我将会在这4个方面做一些学习和记录</p></li></ul><p>愿 诸事顺遂！！</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;生活&quot;&gt;&lt;a href=&quot;#生活&quot; class=&quot;headerlink&quot; title=&quot;生活&quot;&gt;&lt;/a&gt;生活&lt;/h2&gt;&lt;p&gt;给小朋友在家附近报名了钢琴，自己学了一阵子琴，然后只能弹一个4536251的和弦，一首生日快乐、婚礼进行曲，就这样止步不前了，惭愧。&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="生活" scheme="https://samingzhong.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 学习计划</title>
    <link href="https://samingzhong.github.io/2022/08/25/Flutter%20%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    <id>https://samingzhong.github.io/2022/08/25/Flutter%20%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</id>
    <published>2022-08-25T09:05:16.000Z</published>
    <updated>2022-08-29T15:20:24.769Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjTi-qD0uH5AhWemFYBHcpkBCsQFnoECAwQAQ&url=https://juejin.cn/post/7022246208097746958&usg=AOvVaw2TsnAL-f42O2cwA7wFj61L">一起来玩Flutter —— 完整学习路线解读 - 掘金</a></p><h2 id="Android-Studios-Flutter项目高效配置"><a href="#Android-Studios-Flutter项目高效配置" class="headerlink" title="Android Studios Flutter项目高效配置"></a>Android Studios Flutter项目高效配置</h2><h3 id="你如何处理-Flutter-代码中的缩进和结构？"><a href="#你如何处理-Flutter-代码中的缩进和结构？" class="headerlink" title="你如何处理 Flutter 代码中的缩进和结构？"></a>你如何处理 Flutter 代码中的缩进和结构？</h3><p>Android Studio 提供了工具来简化 Flutter 代码的结构化。主要的两点是：</p><ol><li><strong>Alt + Enter&#x2F; Command + Enter</strong>：这使您可以轻松地包装和删除小部件以及在复杂的层次结构中交换小部件。要使用它，只需将光标指向小部件声明并按下按键即可提供一些选项。这有时感觉像是天赐之物。</li><li><strong>DartFMT</strong>：dartfmt 格式化您的代码以保持干净的层次结构和缩进。在您不小心移动了几个括号后，它会使您的代码更漂亮。</li></ol><p>链接：<a href="https://juejin.cn/post/6998684967668547620">https://juejin.cn/post/6998684967668547620</a><br>来源：稀土掘金</p><h3 id="Dart-点将台-package-包相关知识-掘金"><a href="#Dart-点将台-package-包相关知识-掘金" class="headerlink" title="Dart 点将台| package 包相关知识 - 掘金"></a><a href="https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjT-5HMzev5AhW8plYBHaZyARYQFnoECAUQAQ&url=https://juejin.cn/post/6932640833929740296&usg=AOvVaw2Qlt7bV3uH2fPWnEz29qoG">Dart 点将台| package 包相关知识 - 掘金</a></h3><h2 id="Dart-语言"><a href="#Dart-语言" class="headerlink" title="Dart 语言"></a>Dart 语言</h2><p><a href="https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjoxejH0-v5AhUjUfUHHR8YCxkQFnoECAYQAQ&url=https://blog.51cto.com/jianguo/4334685&usg=AOvVaw0PbGZsiw01Kqy1yWdd0hlP">每个Flutter 开发人员都应该知道的16 个Dart 技巧和窍门</a></p><h3 id="Dart开发的7个技巧"><a href="#Dart开发的7个技巧" class="headerlink" title="Dart开发的7个技巧"></a><a href="https://juejin.cn/post/6999040234335764517">Dart开发的7个技巧</a></h3><h4 id="需要同时执行多个Future吗？使用-Future-wait。"><a href="#需要同时执行多个Future吗？使用-Future-wait。" class="headerlink" title="需要同时执行多个Future吗？使用 Future.wait。"></a>需要同时执行多个Future吗？使用 Future.wait。</h4><h4 id="需要调用回调但前提是它不为空？使用“-call-”语法。"><a href="#需要调用回调但前提是它不为空？使用“-call-”语法。" class="headerlink" title="需要调用回调但前提是它不为空？使用“?.call()”语法。"></a>需要调用回调但前提是它不为空？使用“?.call()”语法。</h4><h4 id="需要以空安全的方式遍历map吗？使用-entries"><a href="#需要以空安全的方式遍历map吗？使用-entries" class="headerlink" title="需要以空安全的方式遍历map吗？使用.entries"></a>需要以空安全的方式遍历map吗？使用<code>.entries</code></h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> entry <span class="keyword">in</span> timeSpent.entries) &#123;</span><br><span class="line">  <span class="comment">// do something with keys and values</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;<span class="subst">$&#123;entry.key&#125;</span>: <span class="subst">$&#123;entry.value&#125;</span>&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="flutter开发常见的问题"><a href="#flutter开发常见的问题" class="headerlink" title="flutter开发常见的问题"></a><a href="https://juejin.cn/post/6998684967668547620">flutter开发常见的问题</a></h3><h5 id="对未使用的函数参数使用下划线"><a href="#对未使用的函数参数使用下划线" class="headerlink" title="对未使用的函数参数使用下划线"></a>对未使用的函数参数使用下划线</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ListView.builder(</span><br><span class="line">  itemBuilder: (_, __) =&gt; ListTile(</span><br><span class="line">    title: Text(<span class="string">&#x27;all the same&#x27;</span>),</span><br><span class="line">  ),</span><br><span class="line">  itemCount: <span class="number">10</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><em>注意：这两个参数是不同的 (<code>_</code>和<code>__</code>)，因为它们是<strong>单独的标识符</strong>。</em></p><h4 id="需要一个只能实例化一次的类（又名单例）？使用带有私有构造函数的静态实例变量。"><a href="#需要一个只能实例化一次的类（又名单例）？使用带有私有构造函数的静态实例变量。" class="headerlink" title="需要一个只能实例化一次的类（又名单例）？使用带有私有构造函数的静态实例变量。"></a>需要一个只能实例化一次的类（又名单例）？使用带有私有构造函数的静态实例变量。</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// file_system.dart</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileSystem</span> </span>&#123;</span><br><span class="line">  FileSystem._();</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> instance = FileSystem._();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要在 Dart 中创建单例，您可以声明一个命名构造函数并使用<code>_</code>语法将其设为私有。</p><p>然后，您可以使用它来创建类的一个静态最终实例。</p><p>因此，其他文件中的任何代码都只能通过<code>instance</code>变量访问此类：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// some_other_file.dart</span></span><br><span class="line"><span class="keyword">final</span> fs = FileSystem.instance;</span><br><span class="line"><span class="comment">// do something with fs</span></span><br></pre></td></tr></table></figure><h4 id="同步和异步生成器"><a href="#同步和异步生成器" class="headerlink" title="同步和异步生成器"></a><a href="https://juejin.cn/post/6999408113942003726#heading-0">同步和异步生成器</a></h4><h3 id="Flutter开发中的一些小技巧整理-知乎专栏"><a href="#Flutter开发中的一些小技巧整理-知乎专栏" class="headerlink" title="Flutter开发中的一些小技巧整理 - 知乎专栏"></a><a href="https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjoxejH0-v5AhUjUfUHHR8YCxkQFnoECAQQAQ&url=https://zhuanlan.zhihu.com/p/357234531&usg=AOvVaw2yo9n0F9sIKaTyhkdDRPw3">Flutter开发中的一些小技巧整理 - 知乎专栏</a></h3><h4 id="等符号妙用"><a href="#等符号妙用" class="headerlink" title="?? 等符号妙用"></a>?? 等符号妙用</h4><p>如果我们需要从一个对象取数据渲染，假如数据为<code>null</code>，那么就会报错一般的方法是判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.str == <span class="literal">null</span> ? <span class="string">&quot;&quot;</span> : data.str</span><br></pre></td></tr></table></figure><p>但是在用了 dart 语法后，再这么写显得很low，并且也不够美观，dart 提供了 ?? 方法，其结果和上面的一样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.str ?? <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>还有一个是<code>?.</code>它的意思是如果<code>data</code>为 null 就返回 null，不为 null 返回<code>data.str</code>结果</p><p>假如有多级对象嵌套，如果不做判空处理那么 组件会报错，一般是在进行网络请求后渲染数据，但是在更新数据前我们不想去做 loading 处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Text(data?.info?.name ?? <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="comment">//相当于</span></span><br><span class="line">Text(data != <span class="literal">null</span> &amp;&amp; data.info != <span class="literal">null</span> &amp;&amp; data.info.name != <span class="literal">null</span></span><br><span class="line">                                ? data.info.name</span><br><span class="line">                                : <span class="string">&quot;&quot;</span>),</span><br></pre></td></tr></table></figure><p>这样写是不是代码简洁了很多？</p><h2 id="Flutter-Widgets"><a href="#Flutter-Widgets" class="headerlink" title="Flutter Widgets"></a>Flutter Widgets</h2><h2 id="状态管理"><a href="#状态管理" class="headerlink" title="状态管理"></a>状态管理</h2><h2 id="网络请求"><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h2><h2 id="页面导航"><a href="#页面导航" class="headerlink" title="页面导航"></a>页面导航</h2><h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h2 id="响应式编程"><a href="#响应式编程" class="headerlink" title="响应式编程"></a>响应式编程</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.google.com.hk/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=&amp;ved=2ahUKEwjTi-qD0uH5AhWemFYBHcpkBCsQFnoECAwQAQ&amp;url=https://ju</summary>
      
    
    
    
    
    <category term="Flutter" scheme="https://samingzhong.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter相关优秀书籍、文章</title>
    <link href="https://samingzhong.github.io/2022/08/25/Flutter%E7%9B%B8%E5%85%B3%E4%BC%98%E7%A7%80%E4%B9%A6%E7%B1%8D%E3%80%81%E6%96%87%E7%AB%A0/"/>
    <id>https://samingzhong.github.io/2022/08/25/Flutter%E7%9B%B8%E5%85%B3%E4%BC%98%E7%A7%80%E4%B9%A6%E7%B1%8D%E3%80%81%E6%96%87%E7%AB%A0/</id>
    <published>2022-08-25T08:55:18.000Z</published>
    <updated>2022-08-29T01:54:29.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><p><a href="https://book.flutterchina.club/">《Flutter实战·第二版》</a></p><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><h3 id="优秀文章"><a href="#优秀文章" class="headerlink" title="优秀文章"></a>优秀文章</h3><p><a href="https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjHscaJld_5AhUAmFYBHRBDD0AQFnoECAgQAQ&url=https://github.com/yang7229693/flutter-study/blob/master/post/15.%20Flutter%20%E5%B8%83%E5%B1%80%E6%8E%A7%E4%BB%B6%E5%AE%8C%E7%BB%93%E7%AF%87.md&usg=AOvVaw2OgHqQ_i05IAiOWVmlHlC5">Flutter 布局控件完结篇 - GitHub</a></p><p><a href="https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjTi-qD0uH5AhWemFYBHcpkBCsQFnoECAwQAQ&url=https://juejin.cn/post/7022246208097746958&usg=AOvVaw2TsnAL-f42O2cwA7wFj61L">一起来玩Flutter —— 完整学习路线解读 - 掘金</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;书籍&quot;&gt;&lt;a href=&quot;#书籍&quot; class=&quot;headerlink&quot; title=&quot;书籍&quot;&gt;&lt;/a&gt;书籍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://book.flutterchina.club/&quot;&gt;《Flutter实战·第二版》&lt;/a&gt;&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Flutter Widget</title>
    <link href="https://samingzhong.github.io/2022/08/25/Flutter%20Widget/"/>
    <id>https://samingzhong.github.io/2022/08/25/Flutter%20Widget/</id>
    <published>2022-08-25T08:27:02.000Z</published>
    <updated>2022-08-29T02:51:34.223Z</updated>
    
    
    
    
    
    <category term="Flutter" scheme="https://samingzhong.github.io/tags/Flutter/"/>
    
    <category term="Widget" scheme="https://samingzhong.github.io/tags/Widget/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 开发Q&amp;A</title>
    <link href="https://samingzhong.github.io/2022/08/25/Flutter%20%E5%BC%80%E5%8F%91Q&amp;A/"/>
    <id>https://samingzhong.github.io/2022/08/25/Flutter%20%E5%BC%80%E5%8F%91Q&amp;A/</id>
    <published>2022-08-25T05:52:03.000Z</published>
    <updated>2022-08-29T15:20:24.769Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Everything-is-a-Widget"><a href="#Everything-is-a-Widget" class="headerlink" title="Everything is a Widget"></a>Everything is a Widget</h3><p>一切皆组件</p><h3 id="Flutter转场卡顿"><a href="#Flutter转场卡顿" class="headerlink" title="Flutter转场卡顿"></a>Flutter转场卡顿</h3><ol><li><p>转场动画加上页面初始化&#x2F;销毁中较复杂的操作（一般涉及到IO或者比较消耗CPU的计算），可能会引起页面卡顿。</p><p>解决方案</p><blockquote><ol><li>退出页面卡顿：找出导致卡顿的代码，并做异步线程调用或者延迟调用，或者调用后，延迟退出页面。</li><li>进入页面卡顿：找出导致卡顿的代码，并做异步线程调用或者延迟调用，相关数据等待可以加loading。</li></ol></blockquote></li><li><p>动画卡顿</p><ol><li>当前机器发热严重，CPU&#x2F;GPU处于降频期间。</li></ol></li></ol><h3 id="Flutter-切圆角-ClipRRect"><a href="#Flutter-切圆角-ClipRRect" class="headerlink" title="Flutter 切圆角 ClipRRect"></a>Flutter 切圆角 ClipRRect</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ClipRRect</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Everything-is-a-Widget&quot;&gt;&lt;a href=&quot;#Everything-is-a-Widget&quot; class=&quot;headerlink&quot; title=&quot;Everything is a Widget&quot;&gt;&lt;/a&gt;Everything is a Widg</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>移动开发技术-Flutter学习开篇</title>
    <link href="https://samingzhong.github.io/2022/08/24/Flutter%E5%AD%A6%E4%B9%A0%E5%BC%80%E7%AF%87/"/>
    <id>https://samingzhong.github.io/2022/08/24/Flutter%E5%AD%A6%E4%B9%A0%E5%BC%80%E7%AF%87/</id>
    <published>2022-08-24T08:55:18.000Z</published>
    <updated>2022-08-29T01:54:29.544Z</updated>
    
    <content type="html"><![CDATA[<p>  从2015年开始至今，一直从事iOS原生开发，跨平台技术也一直在发展，从刚开始的H5技术到2014年Facebook推出的RN，然后到2017年Google推出的Flutter，一直到现在Flutter这个后起之秀，无论是开发体验还是应用性能，已经是跨平台的主流技术了，今年（2022年）有机会学习这门技术，挺振奋人心的。对于iOS开发者而言，UI的调试是一个较为低效、繁琐的工作，UI code –》rebuild –〉UI code –》rebuild，如此循环，每改动一次代码，都需要重新编译，然后进入到相应的UI界面，验证代码效果。而Flutter Debug模式下则可以非常方便的热更（hot reload），你的改动，可以近乎实时的触发UI重绘，事实上，你所改动的视图文件，hot reload后，UI的更新也仅限于相应的视图，而不是所有视图，这大大提高了开发效率！</p><p>  今年6月，由于工作需要以及自己对Flutter技能的学习需求，开始了Flutterr学习之旅，本文作为开篇，目的记录Flutter开发中的经验总结。</p><p>  愿诸事顺遂。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  从2015年开始至今，一直从事iOS原生开发，跨平台技术也一直在发展，从刚开始的H5技术到2014年Facebook推出的RN，然后到2017年Google推出的Flutter，一直到现在Flutter这个后起之秀，无论是开发体验还是应用性能，已经是跨平台的主流技术了，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hexo建站Q&amp;A</title>
    <link href="https://samingzhong.github.io/2022/07/23/hexo/hexo-helper/"/>
    <id>https://samingzhong.github.io/2022/07/23/hexo/hexo-helper/</id>
    <published>2022-07-23T06:45:18.000Z</published>
    <updated>2022-08-29T01:54:29.544Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo官方介绍"><a href="#Hexo官方介绍" class="headerlink" title="Hexo官方介绍"></a><a href="https://hexo.io/zh-cn/">Hexo官方介绍</a></h3><h3 id="Hexo建站基础篇"><a href="#Hexo建站基础篇" class="headerlink" title="Hexo建站基础篇"></a><a href="http://hanyu.fit/2021/06/17/%E8%AE%B0%20---%20%E5%85%B3%E4%BA%8E%E8%BF%91%E6%AE%B5%E6%97%B6%E9%97%B4%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%80%BB%E7%BB%93(Hexo%E5%BB%BA%E7%AB%99%20--%20%E5%9F%BA%E7%A1%80%E7%AF%87-%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83)/">Hexo建站基础篇</a></h3><h3 id="添加文章目录"><a href="#添加文章目录" class="headerlink" title="添加文章目录"></a><a href="https://xyzardq.github.io/2016/11/04/Hexo%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/">添加文章目录</a></h3><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a><a href="https://zhuanlan.zhihu.com/p/137338730">更换主题</a></h3><h3 id="新增RSS订阅"><a href="#新增RSS订阅" class="headerlink" title="新增RSS订阅"></a><a href="https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwioobuwtOH5AhXnt1YBHThrBVkQFnoECAYQAw&url=https://zhuanlan.zhihu.com/p/392900543&usg=AOvVaw2yK-opF-gOHYXKevVeXYPH">新增RSS订阅</a></h3><p>该博主hexo相关文章（建站、使用）<a href="https://www.zhihu.com/column/c_1402548025064128512">hexo相关</a>.   </p><h3 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a><a href="https://tooltt.com/crontab/c/118.html">设置定时任务</a></h3><p>需求：</p><ol><li>每天晚上8点定时备份blog</li><li>每隔10天定时发布（更新）blog，并备份blog</li></ol><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">#for test</span></span><br><span class="line">&gt;50 15 * * * bash <span class="variable">$HOME</span>/blog/.scripts/deploy_and_backup_blog.sh&gt;&gt;<span class="variable">$HOME</span>/blog/deployment.log</span><br><span class="line">&gt;<span class="comment">#release </span></span><br><span class="line">&gt;00 20 */10 * * bash <span class="variable">$HOME</span>/blog/.scripts/deploy_and_backup_blog.sh&gt;&gt;<span class="variable">$HOME</span>/blog/deployment.log</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h3 id="便捷脚本、别名"><a href="#便捷脚本、别名" class="headerlink" title="便捷脚本、别名"></a>便捷脚本、别名</h3><h4 id="1-终端命令创建一个新的markdown文件，并使用Typora打开它。"><a href="#1-终端命令创建一个新的markdown文件，并使用Typora打开它。" class="headerlink" title="1.终端命令创建一个新的markdown文件，并使用Typora打开它。"></a>1.终端命令创建一个新的markdown文件，并使用Typora打开它。</h4><blockquote> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">post_name=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">cd</span> ~/blog</span><br><span class="line">hexo new <span class="variable">$post_name</span></span><br><span class="line"><span class="built_in">echo</span> ~/blog/source/_posts/<span class="variable">$post_name</span></span><br><span class="line">/Applications/Typora.app/Contents/MacOS/Typora ~/blog/source/_posts/<span class="variable">$post_name</span>.md &amp;</span><br></pre></td></tr></table></figure></blockquote><h4 id="2-创建别名，便捷调用命令"><a href="#2-创建别名，便捷调用命令" class="headerlink" title="2.创建别名，便捷调用命令"></a>2.创建别名，便捷调用命令</h4><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">. <span class="string">&quot;<span class="variable">$HOME</span>/.cargo/env&quot;</span></span><br><span class="line"><span class="built_in">alias</span> hexonew=<span class="string">&#x27;$HOME/blog/.scripts/blog_new.sh&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> hexog=<span class="string">&#x27;cd $HOME/blog/;hexo g&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成+发布</span></span><br><span class="line"><span class="built_in">alias</span> hexod=<span class="string">&#x27;cd $HOME/blog/;hexo g -d&#x27;</span></span><br><span class="line"><span class="comment"># 生成+备份</span></span><br><span class="line"><span class="built_in">alias</span> hexob=<span class="string">&#x27;cd $HOME/blog/;hexo g;bash $HOME/blog/.scripts/autoUpload.sh&#x27;</span></span><br><span class="line"><span class="comment"># 生成+发布+备份</span></span><br><span class="line"><span class="built_in">alias</span> hexodd=<span class="string">&#x27;bash $HOME/blog/.scripts/deploy_and_backup_blog.sh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> hexos=<span class="string">&#x27;cd $HOME/blog/;hexo s&#x27;</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="文章中插入本地图片（仓库图片）"><a href="#文章中插入本地图片（仓库图片）" class="headerlink" title="文章中插入本地图片（仓库图片）"></a>文章中插入本地图片（仓库图片）<a href="https://hexo.io/zh-cn/docs/asset-folders.html"></a></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Hexo官方介绍&quot;&gt;&lt;a href=&quot;#Hexo官方介绍&quot; class=&quot;headerlink&quot; title=&quot;Hexo官方介绍&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo官方介绍&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;Hexo</summary>
      
    
    
    
    
    <category term="Hexo" scheme="https://samingzhong.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>一款APP设计的从0到1之：iOS篇（精华版）</title>
    <link href="https://samingzhong.github.io/2017/12/06/App%E8%BF%90%E8%90%A5/%E4%B8%80%E6%AC%BEAPP%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%BB%8E0%E5%88%B01/"/>
    <id>https://samingzhong.github.io/2017/12/06/App%E8%BF%90%E8%90%A5/%E4%B8%80%E6%AC%BEAPP%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%BB%8E0%E5%88%B01/</id>
    <published>2017-12-06T13:51:46.000Z</published>
    <updated>2022-08-29T01:54:29.543Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://image.woshipm.com/wp-files/img/82.jpg" alt="img"></p><blockquote><p>很多时候，我们都忙碌在每天的撸图和改稿中，很少的去整理归纳结和思考工作的一些问题和方法，善于总结反思才能达到事半功倍的效果。今天U妹在这里将自己在设计中的一些经验和技巧分享给小伙伴们，这篇文章集合了前面的6篇精华，希望可以给你一定的帮助。</p></blockquote><p>目前在行业里，关于iOS的设计规范也是层次不齐，很多都还停留在6的设备和ios 9的系统之上，而现在最新的是iphone 7和iOS 10了（更新换代真的很快），我这里说的是最新的iOS 界面设计规范（Android设计规范，我们下次见）</p><p>U妹列了一个小小的目录：</p><blockquote><p>一、项目立项</p><p>二、项目预估时间</p><p>三、界面设计</p><p>四、切图标注</p><p>五、视觉还原</p><p>六、上线准备</p></blockquote><h2 id="一、项目立项篇"><a href="#一、项目立项篇" class="headerlink" title="一、项目立项篇"></a>一、项目立项篇</h2><p>我是一名UI设计师，所以U妹这里说的都是从设计师的角度去阐述一款APP从无到有的一个过程中，设计师应该干的事。</p><p>如果你所在的是一个团队健全的公司，在项目立项时，会把所有相关人员（产品汪、运营喵、设计狮、程序猿等）聚在一起开产品会议，产品汪会讲解项目原型、市场调研分析、市场需求、产品定位、盈利模式等具体的功能模块和跳转逻辑，一起讨论交流原型，不足之处进行改进完善，然后评估项目时间，就可以开工了。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/zori6gxbI2Ynsv40lnox.jpg" alt="aef259a815b8a801211d25636bd3.jpg"></p><p><strong>注意：</strong>在产品讲解和演示原型时，你一定要认真听，并且要完全理解整个逻辑，你有疑惑或者不理解的地方，一定要提出疑问，让产品解答，不然你的设计稿可能会出现逻辑错误等。</p><p>这个时候我们就可以新建项目了，做前期准备了</p><p><img src="https://image.woshipm.com/wp-files/2017/12/OE3OiQbuLjuM6Q40eqiZ.png" alt="811959a817c4a801211d25b37143.jpg"></p><p>我个人的立项建档习惯是以<strong>“项目名称+版本号”</strong>来命名文件夹，因为这种方法很方便我管理和查找项目文件。有的设计师可能是把所有文件放在一个文件夹里，如果文件较少还行，当文件较多时，那你要哭了，你都不知道哪个是哪个版本的文件了。</p><p>反复改稿对于设计师来说，那是家常便饭啦，当一个页面反复改稿很多次时（也包括3天2头就改这种），很多设计师的源文件应该是这样的：</p><p><img src="https://image.woshipm.com/wp-files/2017/12/0tX1gukPMAKQmAH4w1fQ.png" alt="c18459a815cda8012028a9d03ba5.jpg"></p><p>初稿、初稿1、初稿2……审定稿、审定稿1……修改稿、修改稿1……最终稿、最终稿1……当我看我这样的源文件时，我想我会吐血，因为太不好区分，哪个是上一版，哪个早一些（在此时你也看到了设计师的真的是很辛苦的，前几天就又有以为设计师加班做题，去了天堂，愿天堂没有PS，详情请戳这里查看）</p><p><img src="http://img.zcool.cn/community/02313059a81118a801211d25ead636.JPG" alt="fcff59a81118a801211d2524ee01.jpg"></p><p>此情此景我只想吟诗一首：<strong>甲方虐我千百遍，我待甲方如初恋，有朝一日做甲方，虐遍天下设计院。</strong> </p><p><img src="https://image.woshipm.com/wp-files/2017/12/slpuHOJWDVK8Yi2zbKcq.jpg" alt="478959a81124a8012028a9e2d858.jpg"></p><p>我个人的习惯是以<strong>“文件名+改稿日期+改稿次数”</strong>来命名，举个栗子，比如“首页_4.10”是最终版，但是4月12日，产品说首页要再加一个通知，那我的文件就是“首页_4.12”，但是前后又改了3次，那就是“首页_4.12.3”一目了然，很容查找要修改的文件。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/cnSnk6Ym84sjxdLTPUmu.png" alt="862759a815dca801211d25f21c3b.jpg"></p><p>立项时我只需要给开发的小伙伴说明一下，他们自然会知道哪个文件是最终版的。</p><p>这里U妹很认真的提醒一下各位小伙伴们，所有的修改稿都别删掉，千万别删，千千万万别删掉（重要的事说了3遍），每一次的修改都在副本本基础上修改，因为当我们改了好多稿后，甲方可能会说“还是第一版好看，回到第一版吧”（不要吐血或砸电脑），所以请千千万万在副本上进行修改。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/wReM38oxafidmVtkKlx6.jpg" alt="87df59a8113da8012028a91ac82a.jpg"></p><p>有人会说我有ctrl+Z，我不怕，u妹告诉你千万别指望ctrl+Z，如果你从没修改过首选项，默认的历史记录只有20步，最大是200步，如果你设置了200步，不怕PS卡奔溃那也是阔以的</p><p>额外再插一句，对于项目的版本控制也是很重要的，我用的项目版本软件控制是SVN，管理项目文件方便高效，可以和本地项目文件同步，就算我的电脑挂，或装系统手误把所有磁盘格式化了，我也不用担心，我只要同步更新SVN线上文件就都回来了，关于SVN这里就不多说了。<br><img src="https://image.woshipm.com/wp-files/2017/12/rWX5Ob81ZNj49Esnx7Bi.png" alt="674a59a8114ea801211d2586e39d.jpg"></p><h2 id="二、项目预估时间篇"><a href="#二、项目预估时间篇" class="headerlink" title="二、项目预估时间篇"></a>二、项目预估时间篇</h2><p>此时此刻，我们已经拿到了PRD文档和原型，先别着急去打开PS画图，因为一个项目的开发是需要时间的，为了更高效的完成开发进度，整个团队都需要预估项目时间，作为UI，很简单，那就是数页面，看总共有多少个页面，再详细预估……</p><p>U妹举个栗子，比如接到一个APP项目，所有页面总共有70个左右，（纳尼！70个页面，我的天啦，不要惊讶，70个页面对于一个APP来说，一点也不多）</p><p>这时候可能boss和产品会问你多久图能出完，先别着急答复，你需要先审视所有页面，他们会没完没了的催你，因为他们着急上线，抢占市场，恨不得让你天天加班作图，然后搞上线；催你不要管，让他们尽情催去吧（再催你的话，你也可以说：催你麻痹，你快，你来画，纯属玩笑，如果你敢，那你真NB）</p><h3 id="1、确定重要页面"><a href="#1、确定重要页面" class="headerlink" title="1、确定重要页面"></a><strong>1、确定重要页面</strong></h3><p>何为重要页面？在如今看颜值的时代，脸就是最重要的，首页就是一款APP的脸；还有很多页面布局主体部分共用相同布局结构，这也是重要页面。拿首页来说，你可能需要花2天时间来完成，之所有要用2天，是因为你还要确定主色、设计风格、icon设计等等，还有就是保证质量（如果谁嫌你慢，你就折磨怼他：想要快行啊，那就降低质量呗，出了问题，你负责啊，啦啦啦~~）</p><p><img src="https://image.woshipm.com/wp-files/2017/12/RuahSQGn7sycCrxaOsAc.jpg" alt="4fc359a81185a8012028a97dd39b.jpg"></p><p>我们都知道鱼和熊掌不可兼得，既想要快速度，还想要高质量，这2者是不可能同时保证的，也很难去平衡的</p><p>然后再挑选一个重要页面，预估用时，然后以此类推，其实首页确定好后，整个APP的设计风格就基本已经确立，其他的页面做起来也就容易多了。</p><h3 id="2、筛选重复页面"><a href="#2、筛选重复页面" class="headerlink" title="2、筛选重复页面"></a><strong>2、筛选重复页面</strong></h3><p>一款APP里，其实有好多页面都是局部结构类似的，所以70个页面，这样筛选下来，估计也就只有一半，30个页面是不重复的。</p><p><strong>插一句：你在做图的过程中，不可能100%保证不会有其他任务，肯定会有一些额外的设计任务，所以，不要把时间估的刚刚好，除非你非常确定不会有额外的设计任务。</strong></p><p>所以，就这剩余的30个页面，按照我的速度，再留出充足的时间的话（在实际预估时间上多30%—50%左右），我大概需要2周时间完成。</p><h3 id="3、整体预估时间"><a href="#3、整体预估时间" class="headerlink" title="3、整体预估时间"></a><strong>3、整体预估时间</strong></h3><p>当确定了30个主要页面的时间，现在就要把其余的重复页面时间算进来，剩余的这40个就相当于批量的，一周时间稳稳购了，千万不要把时间估的太紧，因为你完全不知道boss可能会在你不经意丢给你一个东西让你做，而且还是要的很着急的那种，最后哭的只能是你自己了。</p><p><strong>审视原型→统计筛选页面→重要页面设计（30个）→次页面设计（40个）→审稿+改稿→定稿</strong></p><p>按照自己的预估时间，有序不稳，且能够应对突发设计任务的情况下，差不多3周时间完成，这里U妹是在100%不加班的预估时间。</p><h3 id="4、网页设计预估时间"><a href="#4、网页设计预估时间" class="headerlink" title="4、网页设计预估时间"></a><strong>4、网页设计预估时间</strong></h3><p>一般而言，如果是比较大型的专题页面设计，我一般会预估3天时间，包括从灵感、构思、参考、设计、修改。</p><p>如果是网站，并且有三级页面，大致5个页面左右，大致需要5天时间；具体可根据页面的多少，依次类推进行预估。</p><h2 id="三、界面设计篇"><a href="#三、界面设计篇" class="headerlink" title="三、界面设计篇"></a>三、界面设计篇</h2><p>这里说的都是从设计师的角度去阐述一款APP从无到有的一个过程中，设计师应该干的事。</p><p>目前在行业里，关于APP界面设计规范也是层次不齐，很多都还停留在6的设备和ios 9的系统之上，而现在最新的是iphone 7和iOS 10了（更新换代真的很快），我这里说的是最新的iOS 界面设计规范（Android设计规范，我们下次见）</p><h3 id="1、关于设计工具"><a href="#1、关于设计工具" class="headerlink" title="1、关于设计工具"></a><strong>1、关于设计工具</strong></h3><p>俗话说：工欲善其事必先利其器，好的工具可以让我们的工作效率更高，做界面设计我们用的最多的就是PS和AI了，如果你是Mac用户，可以尝试一下sketch，软件的版本当然是推荐高版本，因为功能更强大，作图的速度也就更快。</p><p>我个人刚接触ps是从8.0开始，8.0 – CS4 – CS 5 – CS 6 – CC – CC 2014 – CC 2015，一直到现在的最新的CC 2017，深刻体会，新的版本更好用。也可以根据个人习惯，选择自己顺手的工具就好。</p><p><strong>2、设计稿尺寸</strong></p><p>在看设计稿尺寸之前，我们先来了解一下APP界面设计构成</p><p><img src="https://image.woshipm.com/wp-files/2017/12/NsE858ab9XFlbHuEytPH.png" alt="141359a81610a8012028a9a91c6d.jpg"></p><p>界面构成由：布局层、图文排版层和图标层。</p><p>在iPhone 6还没出的时候，都是用640×1136 px来做设计稿的，自从6的发布，所有的设计稿尺寸以<strong>750×1334 px</strong>来做设计稿尺寸</p><p><img src="https://image.woshipm.com/wp-files/2017/12/1UbVpHLCZtVVXVhax0LZ.png" alt="113059a811d3a8012028a987480d.jpg"></p><p>U妹再带大家来看看，到目前为止所有iPhone的尺寸（1-3代就不用考虑了）：</p><p><strong>iPhone界面设计规范：</strong></p><p><img src="https://image.woshipm.com/wp-files/2017/12/HwGWvtMIEfvMczVBNfcB.png" alt="9ce659a81b51a801211d2582af02.jpg"></p><p><strong>iPhone 界面尺寸：</strong></p><p><img src="https://image.woshipm.com/wp-files/2017/12/NoCOC1aeLFA34wkDMQL3.png" alt="2fbe59a81b68a8012028a90a7e20.jpg"></p><p><img src="https://image.woshipm.com/wp-files/2017/12/KQeiO7KF9047wQ1xaiq3.png" alt="01d959a81624a8012028a93f9f13.jpg"></p><p><strong>以750x1334px作为设计稿标准尺寸的原由：</strong></p><ol><li>从中间尺寸向上和向下适配的时候界面调整的幅度最小，最方便适配。</li><li>大屏幕时代依然以小尺寸作为设计尺寸，会限制设计师的设计视角。</li><li>设计安卓版本时只需做最小的设计调整，提升设计效率。</li></ol><p>所以做设计稿事请以<strong>750x1334px</strong>来做设计稿</p><p><img src="https://image.woshipm.com/wp-files/2017/12/E04qoGbJHQWJobSFZDAX.png" alt="5fb559a81d32a8012028a90416bc.jpg"></p><p><img src="https://image.woshipm.com/wp-files/2017/12/1EkxkVz8HlwLVm4wUwRi.png" alt="b94459a81ba3a8012028a9311281.jpg"></p><p><img src="https://image.woshipm.com/wp-files/2017/12/OjWpOGViNOCjBOTGq1i7.png" alt="d19f59a81b8ea801211d254fb259.jpg"></p><p>在文档建立参考线是一个很好的习惯，我希望大家也可以养成这个习惯，上下很容易设置，左右我习惯设置24 px的距离，我通过对国内外很多APP就行了对比，总结是24 px更合理，这个是我的个人习惯，所以也不要当做是明文规则，你设置为30 px，也是可以的。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/YIh88b60bwptBAI38Pbu.png" alt="15c459a81bb7a801211d2515e4a7.jpg"></p><p>然后就可以开始你的设计了</p><p>这里U妹再给大家略过一下<strong>iPad的设计规范：</strong></p><p><img src="https://image.woshipm.com/wp-files/2017/12/Xk72r39ujjT3YdNjx7mb.png" alt="57bb59a81be1a801211d25dff900.jpg"></p><p><img src="https://image.woshipm.com/wp-files/2017/12/RzwzMnMhJoG6gurxPqwX.png" alt="9b0859a81273a8012028a9dff0e2.jpg"></p><h3 id="3、图标设计规范"><a href="#3、图标设计规范" class="headerlink" title="3、图标设计规范"></a><strong>3、图标设计规范</strong></h3><p><strong>iPhone 图标尺寸：</strong></p><p><img src="https://image.woshipm.com/wp-files/2017/12/W3PL08T2gXdWuKvXIBrp.png" alt="d89e59a81647a8012028a97679f7.jpg"></p><p><img src="https://image.woshipm.com/wp-files/2017/12/6KuPdUIj4X8oUVgR2R6I.png" alt="b3de59a8165aa801211d25ae1481.jpg"></p><p>图标设计请用栅格化系统进行设计</p><p>设计尺寸：<strong>1024x1024px</strong>，竟可能的采用黄金比例设计</p><p><img src="https://image.woshipm.com/wp-files/2017/12/4VoyhzNH6SuikeBqiEbr.png" alt="624659a8166ba801211d25a67e2b.jpg"></p><h3 id="4、关于设计字体"><a href="#4、关于设计字体" class="headerlink" title="4、关于设计字体"></a><strong>4、关于设计字体</strong></h3><p>先来看一下字体的历史演变过程</p><p>iOS 9：英文字体为Helvetica Neue</p><p>iOS 9：中文字体由为冬青黑</p><p>↓↓↓</p><ul><li>iOS 10：英文字体为San Francisco</li><li>iOS 10：中文字体为苹方</li></ul><p><img src="https://image.woshipm.com/wp-files/2017/12/AszFDStiOO8F26YdMoGK.png" alt="b61959a812a9a801211d25a5eae0.jpg"></p><p><strong>关于字体大小的问题：</strong></p><ul><li>顶部操作栏文字大小：34-38px</li><li>标题文字大小：28-34px</li><li>正文文字大小：26-30px</li><li>辅助性文字大小：0-24px</li><li>Tab bar文字大小：20px</li></ul><p>文字大小只是一个范围，这要根据设计的视觉效果来决定，不要死记硬背，但是切记，字体大小要用偶数。</p><h2 id="四、切图标注篇"><a href="#四、切图标注篇" class="headerlink" title="四、切图标注篇"></a>四、切图标注篇</h2><h3 id="1、切图工具"><a href="#1、切图工具" class="headerlink" title="1、切图工具"></a><strong>1、切图工具</strong></h3><p><strong>Cutterman</strong>，一款PS的插件，切图非常方便，但不支持绿色免安装版本PS，而且对PS版本要求比较高，针对CS 6的已经不维护更新了。推荐安装官方完整版PS CC及以上版本，目前cutterman最新版为3.2.0版本。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/OerGypWb31myi0UKA4F6.png" alt="04f059a812c0a801211d25a97e5d.jpg"></p><p>Assistor PS 也是一款PS的切图标注插件，也被誉为神器；我使用了下，感还可以，但是切图和标注上体验还是不高，但是Assistor PS的其他辅助功能还是很不错的，比如参考线辅助，圆角大小，磁铁功能。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/ANvMv5q8TrbgBsv3aOER.png" alt="35f259a81cdba801211d25af3496.jpg"></p><h3 id="2、标注工具"><a href="#2、标注工具" class="headerlink" title="2、标注工具"></a><strong>2、标注工具</strong></h3><p><strong>PxCook（像素大厨）</strong>，是一款切图标注设计工具软件。自2.0.0版本开始，支持PSD文件的文字，颜色，距离自动智能识别。</p><p>优点在于将标注、切图这两项设计完稿后集成在一个软件内完成，支持Windows和Mac双平台。标注功能包括：支持长度，颜色，区域，文字注释；从2.0.0版本开始，整体效率有了很大的提高，值得推荐的是自动智能识别标注。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/ekn1rXo9LiTdslx1VEwx.png" alt="621959a812d8a8012028a9ef1280.jpg"></p><p>Parker，和cutterman是同一家的，Parker能够自动计算尺寸、距离、文字大小、阴影、描边圆角、行高等信息，并按照你的需要进行标注, 它极大节省你标注的时间，大幅度提升设计效率。（U妹现在一直用Parker进行标注）</p><p>但是，parker并不是免费的，而是一款付费软件，需要60RMB。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/nd84WqyhGrfdT8jnKlYB.png" alt="212259a812e6a801211d25432917.jpg"></p><p><strong>Mark Man</strong>，也是一款高效的设计稿标注工具，支持 Win &#x2F; Mac, 可免费使用基础功能，免费版的在体验上也是差强人意，毕竟是免费的，如果需要高级功能也是需要付费的60RMB。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/gHl1sPO4u4ZTTvWvMnqU.png" alt="19c259a812efa8012028a9f6fadc.jpg"></p><p>以上工具各有优点和缺点，在选择上主要还是看个人的习惯，哪个用着顺手就选择哪个。</p><h3 id="3、页面标注"><a href="#3、页面标注" class="headerlink" title="3、页面标注"></a><strong>3、页面标注</strong></h3><p>标注是非常重要的，开发哥哥能不能完美的的还原设计稿，很大一部分取决于我们的标注；如果不清楚你该怎么标，一定要和开发哥哥沟通！</p><p><strong>沟通是非常有效解决问题的途径！</strong></p><p>在这里我大致的说一下我的标注习惯，不需要将每一张效果图都进行标注，你标注的页面能保证开发能把每个页面都能顺利进行就可以了。</p><p>我拿我标注过的页面做个示例：</p><p><img src="https://image.woshipm.com/wp-files/2017/12/xCSW8vEBYIeSmKV6OrmP.png" alt="66fe59a81695a801211d25e6469c.jpg"></p><p>我们从上面的标注图可以看出，需要标注的内容有：</p><ol><li><strong>文字：</strong>字体大小、字体颜色</li><li><strong>布局控件属性：</strong>控件宽高、背景色、透明度、描边、圆角大小</li><li><strong>列表：</strong>列表高度、列表颜色、列表内内容上下间距</li><li><strong>间距：</strong>控件之间的距离、左右边距</li><li><strong>段落文字：</strong>字体大小、字体颜色、行距</li><li><strong>全部属性：</strong>如导航栏文字大小、颜色，左右边距，默认间距等，你可以提前跟开发哥哥说好，不用标注。</li></ol><p>所有的页面标注总结起来就是：<strong>标文字，标间距，标大小，标区域</strong></p><p><strong>注：标注颜色格式是使用16进制（如：#FF0000），还是RGB（255,0,0）？你需要和开发哥哥商量一下，开他的开发习惯，一般采用16进制色值就好了。</strong></p><h3 id="4、界面切图"><a href="#4、界面切图" class="headerlink" title="4、界面切图"></a><strong>4、界面切图</strong></h3><p>我还是拿图举例来说明：（有图有真相哈）</p><p><img src="https://image.woshipm.com/wp-files/2017/12/PVigjd1Cl5DEEvGSJ2x5.png" alt="4efe59a81312a8012028a93b179a.jpg"></p><ul><li>icon_alipay.png→iPhone 1-3代的手机(已经不考虑了)</li><li><a href="mailto:&#x69;&#99;&#x6f;&#x6e;&#95;&#x61;&#108;&#105;&#x70;&#97;&#121;&#x40;&#x32;&#120;&#46;&#112;&#x6e;&#103;">&#x69;&#99;&#x6f;&#x6e;&#95;&#x61;&#108;&#105;&#x70;&#97;&#121;&#x40;&#x32;&#120;&#46;&#112;&#x6e;&#103;</a>→iPhone4&#x2F;4S&#x2F;5&#x2F;5S&#x2F;6&#x2F;6S&#x2F;7对应尺寸，这就是我们通常所说的2倍图</li><li><a href="mailto:&#105;&#99;&#x6f;&#x6e;&#95;&#97;&#108;&#105;&#x70;&#x61;&#x79;&#64;&#51;&#120;&#46;&#x70;&#110;&#103;">&#105;&#99;&#x6f;&#x6e;&#95;&#97;&#108;&#105;&#x70;&#x61;&#x79;&#64;&#51;&#120;&#46;&#x70;&#110;&#103;</a>→iPhone6P&#x2F;6SP&#x2F;7P使用的尺寸，这就是3倍图</li></ul><p>可以简单的理解为倍数关系，如果你使用<strong>750x1334px</strong>（iPhone 6&#x2F;6S&#x2F;7）尺寸做设计稿，那么切片输出就是@2x，缩小2倍就是@1x，扩大1.5倍就是@3x了。</p><p><strong>我总结了一些切图中常常遇到的问题：</strong></p><p><strong>（1）到底哪些资源需要切图，哪些不需要切图？</strong></p><ul><li>只要是无法用代码来实现和表达出来的，就需要切图</li><li>如果实在不清楚要不要切图，多和开发沟通，他会告诉你哪些是需要你切图的</li></ul><p><strong>（2）切图需要切几套？</strong>（这里我只以iOS作为标准，安卓下期再说）</p><ul><li>理论上，我们需要切3套图，是为了更好的适配。</li><li>在实际工作中，iOS只需要切2套图就可以，分别为：@2x和@3x</li></ul><p><img src="https://image.woshipm.com/wp-files/2017/12/JPbSibqxKiC074WUaFeu.png" alt="5f4859a81327a8012028a9a3b424.jpg"></p><p><strong>（3）切图该怎么命名，不会命名怎么办？</strong></p><p>切图是需要注意几点：</p><ol><li>切图输出格式必须为png24位、png8位、jpg格3种格式</li><li>同一模块内，切图大小应保持一致</li><li>切图输出大小必须保持为<strong>偶数</strong></li><li>为了减小包的大小，所有切图尽量压缩后在给开发（包越小，你的boss越高兴，说不好会给你多发点年终奖哈）</li></ol><p>关于切图和标注就说到这里了，如果在工作中，不清楚该怎么切怎么标的时候，多和开发沟通交流，良好的沟通才是解决问题的唯一方法，切记不要一个人在那瞎琢磨；有疑问和问题题也可给U妹留言，我们下期再见！</p><h2 id="五、视觉还原篇"><a href="#五、视觉还原篇" class="headerlink" title="五、视觉还原篇"></a>五、视觉还原篇</h2><p>一款完整的APP，经过这样的一个流程：<strong>项目立项启动→设计产品原型→设计效果图→进入开发阶段→开发成功后进入测试阶段→测试将问题反馈给开发人员进行调试→多次测试确认没有bug→提交市场、正式上线。</strong></p><p>我们都知道，无论设计师的标注稿多精确，开发出来的产品，多多少少都会有误差，专业来说就是<strong>视觉效果落地还原度</strong>，视觉还原度越高，与设计稿越接近，APP就越精细；反之，就越差。</p><p>所以，就需要我们在这个时候，去配合开发对UI进行调整，来更加的接近我们做的效果图了（简单了说，就是给开发挑毛病，指出和效果图不一致的地方，是不是很开心哈）</p><p>差1px，我也要挑出来（像素眼就是这样炼成的）</p><h3 id="1、设计师如何做视觉还原？"><a href="#1、设计师如何做视觉还原？" class="headerlink" title="1、设计师如何做视觉还原？"></a><strong>1、设计师如何做视觉还原？</strong></h3><p><strong>（1）设计视觉调整文档</strong></p><p>团队较大，建议设计一份视觉调整文章，这样对整个开发进度和效率都是比较高的，因为团队人数多，你不可能跑到iOS开发哥哥那里说一次要调整的地方，然后再去跟Android哥哥再说一次，你有时间，人家不一定有时间，所以设计视觉调整优化文档是很有必要的。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/YqXScQH74Mps0yiFoqdY.png" alt="8c2559a816c9a8012028a9ef38c3.jpg"></p><p>视觉调整优化文档，要一目了然，需要注明和效果图不一样的地方是哪里，应该改成什么样，是iOS调整、Android调整还是h5调整等，输出为png和jpg图片格式，最好输出为PDF格式，开发看起来也方便，比如你写了一个颜色值，开发就可以直接复制了。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/8eyfQlmp9zNvAgjL4HLr.png" alt="ce9d59a816d5a801211d251d35d1.jpg"></p><p><strong>（2）带上你的板凳，过去和开发一起调UI</strong></p><p>这种方法很适合3-4人的小团队，亲自上阵，口述问题，效率也是比较高的，你需要备好你的效果图和开发后的雏形，有对比才有伤害（有图有真相，不一样的地方就得让开发改）</p><h3 id="2、如何让效果图高还原度落地？"><a href="#2、如何让效果图高还原度落地？" class="headerlink" title="2、如何让效果图高还原度落地？"></a><strong>2、如何让效果图高还原度落地？</strong></h3><p><strong>（1）规范的视觉界面设计</strong></p><p>必须按照各平台的UI设计规范去规范的设计界面，用设计规范去知道开发，才是提高视觉还原的的基本前提</p><p><img src="https://image.woshipm.com/wp-files/2017/12/nEOelaQsaQzZftIBzelL.png" alt="fa1959a816e3a8012028a9170878.jpg"></p><p><strong>（2）视觉UI控件的规范输出</strong></p><p>在绝大多数的情况下，为了赶项目进度，都是界面先行，设计规范后出，所以要竟可能的保持界面设计和规范是同步进行。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/oh0vTBtQ6cxU6DxcjjKA.png" alt="ecb659a81395a801211d25bc31a7.jpg"></p><p>以u妹目前的项目经验，可以先输出基础控件元素规范，包括（颜色、文字、图标、蒙板、投影、按钮、输入框、或个别控件），规范是一个庞大而繁琐，极需耐心的工作；过程中注重每一个细节的精准与合理性。</p><p><strong>（3）规范的切图与精确的标注</strong></p><p>我们的切图和标注，是否规范和精确，直接影响视觉效果的还原度，所以切图和标注一定要做的细致，这样更加有利于提升还原度</p><p><img src="https://image.woshipm.com/wp-files/2017/12/sit0WGgYLwAeHivnzrcW.png" alt="1c0759a813a0a8012028a9afc07e.jpg"></p><p><strong>（4）多和开发沟通交流</strong></p><p>U妹一直说的一句话：沟通是解决问题的最有效方法，所以多和开发哥哥接触沟通交流，如果有条件允许的话，请与开发坐一起；遇到问题及时面对面协商解决、达成共识、修改、敲定、解决。</p><h2 id="六、上线准备篇"><a href="#六、上线准备篇" class="headerlink" title="六、上线准备篇"></a>六、上线准备篇</h2><p>当一款APP开发完毕，测试通过，这时候就需要准备提交正式上线了，但是在上线之前，我们设计师还需要配合，做一些上线前的工作，U妹带你来看一看需要做哪些工作？</p><h3 id="1、应用图标（APP-Icon）"><a href="#1、应用图标（APP-Icon）" class="headerlink" title="1、应用图标（APP Icon）"></a><strong>1、应用图标（APP Icon）</strong></h3><p><strong>（1） iOS icon</strong></p><p><img src="https://image.woshipm.com/wp-files/2017/12/zPKKsOJz0Oh8Xgov1vNM.png" alt="78db59a8170aa801211d2537e69a.jpg"></p><p>这是iOS开发工具Xcode提供的APP Icon (应用图标)的各项尺寸（这是U妹为了写这篇文章专门找开发要的，U妹和开发的关系可是很不错的），咋一看是不是吓一跳？开发是按照iOS的系统版本来设置的，但你是设计师，你是按照iPhone的版本来作图的，所以其实没有那么多，真实情况下，我的开发同事要求提供以下几个尺寸：</p><p><img src="https://image.woshipm.com/wp-files/2017/12/70arZNnAJdMi6YhfJK5R.png" alt="525b59a81743a8012028a95d6e6a.jpg"></p><p>因为需要的图标非常多，不可能全部加进去，只能选择最好的尺寸，我的开发哥哥要求我提供以下图标尺寸：</p><blockquote><p><strong>1024×1024</strong>         Retina APP Icon for APP Store(高清屏的APP Store)</p><p><strong>512×512</strong>           APP Icon for APP Store（普通屏幕的APP Store）</p><p><strong>120×120</strong>          6以及以下的主屏幕尺寸</p><p><strong>180×180</strong>           6 plus的主屏幕图标尺寸</p><p><strong>58×58</strong>             Settings on devices with retina display</p><p><strong>87×87</strong>             Settings on iPhone 6 Plus</p><p><strong>80×80</strong>             Spotlight on devices with retina display</p></blockquote><p><strong>注意：这里需要注意一下，iOS系统可以自动把图片裁剪为圆角，所以提交图标的时候，你只需要提交正方形的PNG格式即可。</strong></p><p>我们来看看苹果官方的APP icon规范：</p><p><img src="https://image.woshipm.com/wp-files/2017/12/kEbvOxutI5dL5ODFvodh.png" alt="8f5159a813dba8012028a9e79ba1.jpg"></p><p><strong>（2）Android icon</strong></p><p>安卓的图标相对iOS来说较少，我们只需提供一下几个尺寸就可以了，但是需要提高2套，圆角和直角各一套，因为有的地方都会用到。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/YjHYIWh2sWUXbkTHNZxf.png" alt="51c559a8183da801211d256893e8.jpg"></p><ul><li>512x512px</li><li>192x192px</li><li>144x144px</li><li>96x96px</li><li>72x72px</li><li>48x48px</li></ul><p>因为安卓有很多的机型，不同屏幕密度的手机对应的icon大小也是不同的，所以U妹这里没法给你给出相应的icon所被应用的位置。</p><h3 id="2、启动页（Launch-Image）"><a href="#2、启动页（Launch-Image）" class="headerlink" title="2、启动页（Launch Image）"></a><strong>2、启动页（Launch Image）</strong></h3><p><img src="https://image.woshipm.com/wp-files/2017/12/9TQLSdyplydwU5hFvS0L.png" alt="614a59a81758a801211d254805cd.jpg"></p><p><img src="https://image.woshipm.com/wp-files/2017/12/p3WPRlfoJGkZSEWOVUOg.png" alt="837859a813f6a801211d25008676.jpg"></p><p>这同样也是iOS开发工具Xcode提供的LaunchImage(启动页)的各项尺寸，我们需要提供4种尺寸给的开发工程师：</p><blockquote><p><strong>640x960px</strong>          iPhone 4&#x2F;4s</p><p><strong>640x1136px</strong>         iPhone 5&#x2F;5s&#x2F;5c&#x2F;SE</p><p><strong>750x1334px</strong>         iPhone 6&#x2F;6S&#x2F;7</p><p><strong>1242x2208px</strong>        iPhone 6 plus&#x2F;6S plus&#x2F;7 plus</p><p><strong>2208x1242px</strong>        iPhone 6 plus&#x2F;6S plus&#x2F;7 plus的横屏尺寸，如果我们的APP支持横屏模式，你就需要做一张横屏的启动页。</p></blockquote><p><strong>注意：启动页面一定要是PNG格式的，建议给开发之前讲图片全部压缩一下。</strong></p><h3 id="3、商店页（Launch-Image）"><a href="#3、商店页（Launch-Image）" class="headerlink" title="3、商店页（Launch Image）"></a><strong>3、商店页（Launch Image）</strong></h3><p><img src="https://image.woshipm.com/wp-files/2017/12/ebS1iJcNhC0ciD2RXMDP.jpg" alt="7d0c59a81772a8012028a9be974f.jpg"></p><p>这是苹果官方上线提交页面，在这里你需要上传APP图标，版本号和应用描述等信息。</p><p><img src="https://image.woshipm.com/wp-files/2017/12/WmC3aVQKLmQcEaCNVCT4.jpg" alt="18d659a81785a8012028a9584434.jpg"></p><p>这里就是需要添加商店页的地方，<strong>商店页最多为5张</strong>，格式为png或jpg文件格式，并且还支持视频格式</p><p>这是“农药”APP的商店宣传页：</p><p><img src="https://image.woshipm.com/wp-files/2017/12/SoFzoKvmDLNAFbtRbmSr.jpg" alt="985259a81799a8012028a9509732.jpg"></p><p>下面其他商店页尺寸的添加页面，在最之前我们都要提供4套尺寸：</p><p><img src="https://image.woshipm.com/wp-files/2017/12/S3RmQL6YrZe58qXYRuGV.png" alt="72ac59a81462a8012028a9dfc72e.jpg"></p><p>前不久，iOS开发哥哥告诉我，现在商店页只需做一套尺寸：750x1334px，就ok了，为我们减少了很多的工作量</p><p>这是苹果官方的商店页规范：</p><p><img src="https://image.woshipm.com/wp-files/2017/12/JkPzsJEfJYTjQrcnQMSc.png" alt="7ce059a81485a801211d2580a480.jpg"></p><p>安卓应用市场有很多，但总体来来说相对比较一致，安卓的商店页我们是需要提供2套尺寸的：</p><ul><li>480x854px</li><li>720x1280px</li></ul><p><img src="https://image.woshipm.com/wp-files/2017/12/usPPRMrUUXKNVnsdZaNg.png" alt="765d59a8148fa801211d2580ad38.jpg"></p><p>U妹再给大家回顾一下整个APP的开发流程：</p><p>一款完整的APP，经过这样的一个流程：<strong>项目立项启动→设计产品原型→设计效果图→进入开发阶段→开发成功后进入测试阶段→测试将问题反馈给开发人员进行调试→多次测试确认没有bug→提交市场、正式上线。</strong></p><p>当要上线时，我们还需做点必不可少的准备：</p><p><strong>设楠木案堂，三支灵香，紫砂香炉，于申时燃起，叩首三次，待三炷香燃尽，方可成功上线，此缺一不可，切记切记！！！</strong></p><p>关于《一款APP设计的从0到1》的iOS系列就全部讲完了，希望可以给你有很大的帮助；U妹这里说的只是一种工作方法，好的工作方法才能自己事半功倍，在具体工作中也要灵活拥有，一定要多和开发沟通交流，良好的沟通才是解决问题的唯一方法，有疑问题也可给U妹留言，我们下期再见！</p><p>本文源自：<a href="https://www.woshipm.com/ucd/868764.html">https://www.woshipm.com/ucd/868764.html</a></p><p>作者：U妹，一个不要命的UI设计师，等你，来撩妹哟。微信公众号：UI妹儿（ID：UIfaner）</p><p>本文由 @U妹儿 原创发布于人人都是产品经理，未经许可，禁止转载。</p><p>题图由作者提供</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.woshipm.com/wp-files/img/82.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多时候，我们都忙碌在每天的撸图和改稿中，很少的去整理归纳结和思考工作的一些问题和方法，善于总结反</summary>
      
    
    
    
    
    <category term="App设计" scheme="https://samingzhong.github.io/tags/App%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
</feed>
